
Velocista.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000e  00800100  00000fea  0000107e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000fea  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000048  0080010e  0080010e  0000108c  2**0
                  ALLOC
  3 .stab         00001224  00000000  00000000  0000108c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00002263  00000000  00000000  000022b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000030  00000000  00000000  00004513  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000068  00000000  00000000  00004543  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000004df  00000000  00000000  000045ab  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000002a7  00000000  00000000  00004a8a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000003cc  00000000  00000000  00004d31  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000000f4  00000000  00000000  00005100  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000220  00000000  00000000  000051f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000230  00000000  00000000  00005414  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000048  00000000  00000000  00005644  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ea ee       	ldi	r30, 0xEA	; 234
  7c:	ff e0       	ldi	r31, 0x0F	; 15
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ae 30       	cpi	r26, 0x0E	; 14
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	ae e0       	ldi	r26, 0x0E	; 14
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a6 35       	cpi	r26, 0x56	; 86
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 53 00 	call	0xa6	; 0xa6 <main>
  9e:	0c 94 f3 07 	jmp	0xfe6	; 0xfe6 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <main>:

#include "VelocistaLib.h"

int main()
{
	RobotInit();
  a6:	0e 94 6b 00 	call	0xd6	; 0xd6 <RobotInit>
		delay(20);
	}*/
	
	while (1)
	{
		PID();
  aa:	0e 94 c1 00 	call	0x182	; 0x182 <PID>
  ae:	fd cf       	rjmp	.-6      	; 0xaa <main+0x4>

000000b0 <motors_init>:
void motors_init()
{
	// configure for inverted PWM output on motor control pins:
	//  set OCxx on compare match, clear on timer overflow
	//  Timer0 and Timer2 count up from 0 to 255
	TCCR0A = TCCR2A = 0xF3;
  b0:	83 ef       	ldi	r24, 0xF3	; 243
  b2:	80 93 b0 00 	sts	0x00B0, r24
  b6:	84 bd       	out	0x24, r24	; 36
	
	// use the system clock/8 (=2.5 MHz) as the timer clock
	TCCR0B = TCCR2B = 0x02;
  b8:	82 e0       	ldi	r24, 0x02	; 2
  ba:	80 93 b1 00 	sts	0x00B1, r24
  be:	85 bd       	out	0x25, r24	; 37
	
	// initialize all PWMs to 0% duty cycle (braking)
	OCR0A = OCR0B = OCR2A = OCR2B = 0;
  c0:	10 92 b4 00 	sts	0x00B4, r1
  c4:	10 92 b3 00 	sts	0x00B3, r1
  c8:	18 bc       	out	0x28, r1	; 40
  ca:	17 bc       	out	0x27, r1	; 39
	
	// set PWM pins as digital outputs (the PWM signals will not
	// appear on the lines if they are digital inputs)
	DDRD |= (1 << PORTD3) | (1 << PORTD5) | (1 << PORTD6);
  cc:	8a b1       	in	r24, 0x0a	; 10
  ce:	88 66       	ori	r24, 0x68	; 104
  d0:	8a b9       	out	0x0a, r24	; 10
	DDRB |= (1 << PORTB3);
  d2:	23 9a       	sbi	0x04, 3	; 4
  d4:	08 95       	ret

000000d6 <RobotInit>:
}

void RobotInit(){
  d6:	cf 93       	push	r28
  d8:	df 93       	push	r29
  da:	cd b7       	in	r28, 0x3d	; 61
  dc:	de b7       	in	r29, 0x3e	; 62
  de:	28 97       	sbiw	r28, 0x08	; 8
  e0:	0f b6       	in	r0, 0x3f	; 63
  e2:	f8 94       	cli
  e4:	de bf       	out	0x3e, r29	; 62
  e6:	0f be       	out	0x3f, r0	; 63
  e8:	cd bf       	out	0x3d, r28	; 61
	// initialize your QTR sensors
	unsigned char qtr_rc_pins[] = {SENSOR1, SENSOR2, SENSOR3, SENSOR4, SENSOR5, SENSOR6, SENSOR7, SENSOR8};
  ea:	88 e0       	ldi	r24, 0x08	; 8
  ec:	e6 e0       	ldi	r30, 0x06	; 6
  ee:	f1 e0       	ldi	r31, 0x01	; 1
  f0:	de 01       	movw	r26, r28
  f2:	11 96       	adiw	r26, 0x01	; 1
  f4:	01 90       	ld	r0, Z+
  f6:	0d 92       	st	X+, r0
  f8:	8a 95       	dec	r24
  fa:	e1 f7       	brne	.-8      	; 0xf4 <RobotInit+0x1e>
	qtr_rc_init(qtr_rc_pins, 8, 2000, IRLIGHT);
  fc:	23 e1       	ldi	r18, 0x13	; 19
  fe:	40 ed       	ldi	r20, 0xD0	; 208
 100:	57 e0       	ldi	r21, 0x07	; 7
 102:	68 e0       	ldi	r22, 0x08	; 8
 104:	ce 01       	movw	r24, r28
 106:	01 96       	adiw	r24, 0x01	; 1
 108:	0e 94 96 02 	call	0x52c	; 0x52c <qtr_rc_init>
	motors_init();
 10c:	0e 94 58 00 	call	0xb0	; 0xb0 <motors_init>
}
 110:	28 96       	adiw	r28, 0x08	; 8
 112:	0f b6       	in	r0, 0x3f	; 63
 114:	f8 94       	cli
 116:	de bf       	out	0x3e, r29	; 62
 118:	0f be       	out	0x3f, r0	; 63
 11a:	cd bf       	out	0x3d, r28	; 61
 11c:	df 91       	pop	r29
 11e:	cf 91       	pop	r28
 120:	08 95       	ret

00000122 <MoverMotores>:

void MoverMotores(int m1Speed, int m2Speed){
	OCR0A = 0;
 122:	17 bc       	out	0x27, r1	; 39
	OCR2A = 0;
 124:	10 92 b3 00 	sts	0x00B3, r1
 128:	97 ff       	sbrs	r25, 7
 12a:	02 c0       	rjmp	.+4      	; 0x130 <MoverMotores+0xe>
 12c:	80 e0       	ldi	r24, 0x00	; 0
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	9b 01       	movw	r18, r22
 132:	77 ff       	sbrs	r23, 7
 134:	02 c0       	rjmp	.+4      	; 0x13a <MoverMotores+0x18>
 136:	20 e0       	ldi	r18, 0x00	; 0
 138:	30 e0       	ldi	r19, 0x00	; 0
	}
	if (m2Speed < 0){
		m2Speed = 0;
	}
	
	if (INIT_SPEED < MAX_SPEED){
 13a:	40 91 20 01 	lds	r20, 0x0120
 13e:	50 91 21 01 	lds	r21, 0x0121
 142:	40 35       	cpi	r20, 0x50	; 80
 144:	51 05       	cpc	r21, r1
 146:	7c f4       	brge	.+30     	; 0x166 <MoverMotores+0x44>
 148:	48 17       	cp	r20, r24
 14a:	59 07       	cpc	r21, r25
 14c:	0c f4       	brge	.+2      	; 0x150 <MoverMotores+0x2e>
 14e:	ca 01       	movw	r24, r20
 150:	42 17       	cp	r20, r18
 152:	53 07       	cpc	r21, r19
 154:	0c f4       	brge	.+2      	; 0x158 <MoverMotores+0x36>
 156:	9a 01       	movw	r18, r20
			m1Speed = INIT_SPEED;
		}
		if(m2Speed > INIT_SPEED){
			m2Speed = INIT_SPEED;
		}
		INIT_SPEED++;
 158:	4f 5f       	subi	r20, 0xFF	; 255
 15a:	5f 4f       	sbci	r21, 0xFF	; 255
 15c:	50 93 21 01 	sts	0x0121, r21
 160:	40 93 20 01 	sts	0x0120, r20
 164:	0a c0       	rjmp	.+20     	; 0x17a <MoverMotores+0x58>
 166:	81 35       	cpi	r24, 0x51	; 81
 168:	91 05       	cpc	r25, r1
 16a:	14 f0       	brlt	.+4      	; 0x170 <MoverMotores+0x4e>
 16c:	80 e5       	ldi	r24, 0x50	; 80
 16e:	90 e0       	ldi	r25, 0x00	; 0
 170:	21 35       	cpi	r18, 0x51	; 81
 172:	31 05       	cpc	r19, r1
 174:	14 f0       	brlt	.+4      	; 0x17a <MoverMotores+0x58>
 176:	20 e5       	ldi	r18, 0x50	; 80
 178:	30 e0       	ldi	r19, 0x00	; 0
		if(m2Speed > MAX_SPEED){
			m2Speed = MAX_SPEED;
		}
	}
	
	OCR0B = m1Speed;
 17a:	88 bd       	out	0x28, r24	; 40
	OCR2B = m2Speed;
 17c:	20 93 b4 00 	sts	0x00B4, r18
 180:	08 95       	ret

00000182 <PID>:
	
}

void PID(){
 182:	4f 92       	push	r4
 184:	5f 92       	push	r5
 186:	6f 92       	push	r6
 188:	7f 92       	push	r7
 18a:	8f 92       	push	r8
 18c:	9f 92       	push	r9
 18e:	af 92       	push	r10
 190:	bf 92       	push	r11
 192:	cf 92       	push	r12
 194:	df 92       	push	r13
 196:	ef 92       	push	r14
 198:	ff 92       	push	r15
 19a:	cf 93       	push	r28
 19c:	df 93       	push	r29
 19e:	00 d0       	rcall	.+0      	; 0x1a0 <PID+0x1e>
 1a0:	00 d0       	rcall	.+0      	; 0x1a2 <PID+0x20>
 1a2:	cd b7       	in	r28, 0x3d	; 61
 1a4:	de b7       	in	r29, 0x3e	; 62
	
	qtr_read(sensors, QTR_EMITTERS_ON);
 1a6:	61 e0       	ldi	r22, 0x01	; 1
 1a8:	82 e4       	ldi	r24, 0x42	; 66
 1aa:	91 e0       	ldi	r25, 0x01	; 1
 1ac:	0e 94 85 04 	call	0x90a	; 0x90a <qtr_read>
 1b0:	e2 e4       	ldi	r30, 0x42	; 66
 1b2:	f1 e0       	ldi	r31, 0x01	; 1
	
	for (int i=0; i < 8; i++){
		if (sensors[i] < 200){
 1b4:	80 81       	ld	r24, Z
 1b6:	91 81       	ldd	r25, Z+1	; 0x01
 1b8:	88 3c       	cpi	r24, 0xC8	; 200
 1ba:	91 05       	cpc	r25, r1
 1bc:	10 f4       	brcc	.+4      	; 0x1c2 <PID+0x40>
			sensors[i] = 0;
 1be:	11 82       	std	Z+1, r1	; 0x01
 1c0:	10 82       	st	Z, r1
 1c2:	32 96       	adiw	r30, 0x02	; 2

void PID(){
	
	qtr_read(sensors, QTR_EMITTERS_ON);
	
	for (int i=0; i < 8; i++){
 1c4:	21 e0       	ldi	r18, 0x01	; 1
 1c6:	e2 35       	cpi	r30, 0x52	; 82
 1c8:	f2 07       	cpc	r31, r18
 1ca:	a1 f7       	brne	.-24     	; 0x1b4 <PID+0x32>
 1cc:	41 2c       	mov	r4, r1
 1ce:	51 2c       	mov	r5, r1
 1d0:	32 01       	movw	r6, r4
		if (sensors[i] < 200){
			sensors[i] = 0;
		}
	}
	
	numerador = 0;
 1d2:	e2 e4       	ldi	r30, 0x42	; 66
 1d4:	f1 e0       	ldi	r31, 0x01	; 1
 1d6:	88 ee       	ldi	r24, 0xE8	; 232
 1d8:	c8 2e       	mov	r12, r24
 1da:	83 e0       	ldi	r24, 0x03	; 3
 1dc:	d8 2e       	mov	r13, r24
 1de:	e1 2c       	mov	r14, r1
 1e0:	f1 2c       	mov	r15, r1
 1e2:	81 2c       	mov	r8, r1
 1e4:	91 2c       	mov	r9, r1
 1e6:	54 01       	movw	r10, r8
	denominador = 0;
	for (int i=0; i < 8; i++){
		numerador = numerador + (((long)(1000)) * ((long) (i+1)) * ((long)(sensors[i])));
 1e8:	81 91       	ld	r24, Z+
 1ea:	91 91       	ld	r25, Z+
 1ec:	9c 01       	movw	r18, r24
 1ee:	40 e0       	ldi	r20, 0x00	; 0
 1f0:	50 e0       	ldi	r21, 0x00	; 0
 1f2:	29 83       	std	Y+1, r18	; 0x01
 1f4:	3a 83       	std	Y+2, r19	; 0x02
 1f6:	4b 83       	std	Y+3, r20	; 0x03
 1f8:	5c 83       	std	Y+4, r21	; 0x04
 1fa:	a7 01       	movw	r20, r14
 1fc:	96 01       	movw	r18, r12
 1fe:	69 81       	ldd	r22, Y+1	; 0x01
 200:	7a 81       	ldd	r23, Y+2	; 0x02
 202:	8b 81       	ldd	r24, Y+3	; 0x03
 204:	9c 81       	ldd	r25, Y+4	; 0x04
 206:	0e 94 16 06 	call	0xc2c	; 0xc2c <__mulsi3>
 20a:	64 0d       	add	r22, r4
 20c:	75 1d       	adc	r23, r5
 20e:	86 1d       	adc	r24, r6
 210:	97 1d       	adc	r25, r7
		denominador = denominador + ((long) (sensors[i]));
 212:	29 81       	ldd	r18, Y+1	; 0x01
 214:	3a 81       	ldd	r19, Y+2	; 0x02
 216:	4b 81       	ldd	r20, Y+3	; 0x03
 218:	5c 81       	ldd	r21, Y+4	; 0x04
 21a:	28 0d       	add	r18, r8
 21c:	39 1d       	adc	r19, r9
 21e:	4a 1d       	adc	r20, r10
 220:	5b 1d       	adc	r21, r11
 222:	a8 ee       	ldi	r26, 0xE8	; 232
 224:	ca 0e       	add	r12, r26
 226:	a3 e0       	ldi	r26, 0x03	; 3
 228:	da 1e       	adc	r13, r26
 22a:	e1 1c       	adc	r14, r1
 22c:	f1 1c       	adc	r15, r1
		}
	}
	
	numerador = 0;
	denominador = 0;
	for (int i=0; i < 8; i++){
 22e:	b8 e2       	ldi	r27, 0x28	; 40
 230:	cb 16       	cp	r12, r27
 232:	b3 e2       	ldi	r27, 0x23	; 35
 234:	db 06       	cpc	r13, r27
 236:	e1 04       	cpc	r14, r1
 238:	f1 04       	cpc	r15, r1
 23a:	29 f0       	breq	.+10     	; 0x246 <PID+0xc4>
		numerador = numerador + (((long)(1000)) * ((long) (i+1)) * ((long)(sensors[i])));
 23c:	2b 01       	movw	r4, r22
 23e:	3c 01       	movw	r6, r24
		denominador = denominador + ((long) (sensors[i]));
 240:	49 01       	movw	r8, r18
 242:	5a 01       	movw	r10, r20
 244:	d1 cf       	rjmp	.-94     	; 0x1e8 <PID+0x66>
 246:	60 93 1a 01 	sts	0x011A, r22
 24a:	70 93 1b 01 	sts	0x011B, r23
 24e:	80 93 1c 01 	sts	0x011C, r24
 252:	90 93 1d 01 	sts	0x011D, r25
 256:	20 93 16 01 	sts	0x0116, r18
 25a:	30 93 17 01 	sts	0x0117, r19
 25e:	40 93 18 01 	sts	0x0118, r20
 262:	50 93 19 01 	sts	0x0119, r21
	}
	
	if (denominador != 0){
 266:	21 15       	cp	r18, r1
 268:	31 05       	cpc	r19, r1
 26a:	41 05       	cpc	r20, r1
 26c:	51 05       	cpc	r21, r1
 26e:	51 f0       	breq	.+20     	; 0x284 <PID+0x102>
		position = numerador / denominador;
 270:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__divmodsi4>
 274:	20 93 12 01 	sts	0x0112, r18
 278:	30 93 13 01 	sts	0x0113, r19
 27c:	40 93 14 01 	sts	0x0114, r20
 280:	50 93 15 01 	sts	0x0115, r21
	}
	
	int error = position - 4500;
 284:	e0 90 12 01 	lds	r14, 0x0112
 288:	f0 90 13 01 	lds	r15, 0x0113
 28c:	24 e9       	ldi	r18, 0x94	; 148
 28e:	e2 1a       	sub	r14, r18
 290:	21 e1       	ldi	r18, 0x11	; 17
 292:	f2 0a       	sbc	r15, r18
	
	int motorSpeed = kP * error + kD * (error - lastError);
 294:	b7 01       	movw	r22, r14
 296:	88 27       	eor	r24, r24
 298:	77 fd       	sbrc	r23, 7
 29a:	80 95       	com	r24
 29c:	98 2f       	mov	r25, r24
 29e:	0e 94 27 05 	call	0xa4e	; 0xa4e <__floatsisf>
 2a2:	23 e3       	ldi	r18, 0x33	; 51
 2a4:	33 e3       	ldi	r19, 0x33	; 51
 2a6:	43 ea       	ldi	r20, 0xA3	; 163
 2a8:	50 e4       	ldi	r21, 0x40	; 64
 2aa:	0e 94 b3 05 	call	0xb66	; 0xb66 <__mulsf3>
 2ae:	4b 01       	movw	r8, r22
 2b0:	5c 01       	movw	r10, r24
 2b2:	80 91 1e 01 	lds	r24, 0x011E
 2b6:	90 91 1f 01 	lds	r25, 0x011F
 2ba:	b7 01       	movw	r22, r14
 2bc:	68 1b       	sub	r22, r24
 2be:	79 0b       	sbc	r23, r25
 2c0:	88 27       	eor	r24, r24
 2c2:	77 fd       	sbrc	r23, 7
 2c4:	80 95       	com	r24
 2c6:	98 2f       	mov	r25, r24
 2c8:	0e 94 27 05 	call	0xa4e	; 0xa4e <__floatsisf>
 2cc:	2a e9       	ldi	r18, 0x9A	; 154
 2ce:	39 e9       	ldi	r19, 0x99	; 153
 2d0:	41 e6       	ldi	r20, 0x61	; 97
 2d2:	51 e4       	ldi	r21, 0x41	; 65
 2d4:	0e 94 b3 05 	call	0xb66	; 0xb66 <__mulsf3>
 2d8:	9b 01       	movw	r18, r22
 2da:	ac 01       	movw	r20, r24
 2dc:	c5 01       	movw	r24, r10
 2de:	b4 01       	movw	r22, r8
 2e0:	0e 94 90 04 	call	0x920	; 0x920 <__addsf3>
 2e4:	0e 94 f4 04 	call	0x9e8	; 0x9e8 <__fixsfsi>
	lastError = error;
 2e8:	f0 92 1f 01 	sts	0x011F, r15
 2ec:	e0 92 1e 01 	sts	0x011E, r14
	
	int m1Speed = MAX_SPEED + motorSpeed;
	int m2Speed = MAX_SPEED - motorSpeed;
 2f0:	20 e5       	ldi	r18, 0x50	; 80
 2f2:	30 e0       	ldi	r19, 0x00	; 0
 2f4:	26 1b       	sub	r18, r22
 2f6:	37 0b       	sbc	r19, r23
	int error = position - 4500;
	
	int motorSpeed = kP * error + kD * (error - lastError);
	lastError = error;
	
	int m1Speed = MAX_SPEED + motorSpeed;
 2f8:	cb 01       	movw	r24, r22
 2fa:	80 5b       	subi	r24, 0xB0	; 176
 2fc:	9f 4f       	sbci	r25, 0xFF	; 255
	int m2Speed = MAX_SPEED - motorSpeed;
	
	MoverMotores(m1Speed, m2Speed);
 2fe:	b9 01       	movw	r22, r18

}
 300:	0f 90       	pop	r0
 302:	0f 90       	pop	r0
 304:	0f 90       	pop	r0
 306:	0f 90       	pop	r0
 308:	df 91       	pop	r29
 30a:	cf 91       	pop	r28
 30c:	ff 90       	pop	r15
 30e:	ef 90       	pop	r14
 310:	df 90       	pop	r13
 312:	cf 90       	pop	r12
 314:	bf 90       	pop	r11
 316:	af 90       	pop	r10
 318:	9f 90       	pop	r9
 31a:	8f 90       	pop	r8
 31c:	7f 90       	pop	r7
 31e:	6f 90       	pop	r6
 320:	5f 90       	pop	r5
 322:	4f 90       	pop	r4
	lastError = error;
	
	int m1Speed = MAX_SPEED + motorSpeed;
	int m2Speed = MAX_SPEED - motorSpeed;
	
	MoverMotores(m1Speed, m2Speed);
 324:	0c 94 91 00 	jmp	0x122	; 0x122 <MoverMotores>

00000328 <delayMicroseconds>:
 328:	6f 93       	push	r22
 32a:	64 e0       	ldi	r22, 0x04	; 4
 32c:	6a 95       	dec	r22
 32e:	f1 f7       	brne	.-4      	; 0x32c <delayMicroseconds+0x4>
 330:	6f 91       	pop	r22
 332:	01 97       	sbiw	r24, 0x01	; 1
 334:	c9 f7       	brne	.-14     	; 0x328 <delayMicroseconds>
 336:	08 95       	ret

00000338 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>:
 338:	fc 01       	movw	r30, r24
 33a:	11 82       	std	Z+1, r1	; 0x01
 33c:	10 82       	st	Z, r1
 33e:	13 82       	std	Z+3, r1	; 0x03
 340:	12 82       	std	Z+2, r1	; 0x02
 342:	15 82       	std	Z+5, r1	; 0x05
 344:	14 82       	std	Z+4, r1	; 0x04
 346:	16 82       	std	Z+6, r1	; 0x06
 348:	68 30       	cpi	r22, 0x08	; 8
 34a:	68 f4       	brcc	.+26     	; 0x366 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x2e>
 34c:	89 e2       	ldi	r24, 0x29	; 41
 34e:	90 e0       	ldi	r25, 0x00	; 0
 350:	91 83       	std	Z+1, r25	; 0x01
 352:	80 83       	st	Z, r24
 354:	8b e2       	ldi	r24, 0x2B	; 43
 356:	90 e0       	ldi	r25, 0x00	; 0
 358:	93 83       	std	Z+3, r25	; 0x03
 35a:	82 83       	std	Z+2, r24	; 0x02
 35c:	8a e2       	ldi	r24, 0x2A	; 42
 35e:	90 e0       	ldi	r25, 0x00	; 0
 360:	95 83       	std	Z+5, r25	; 0x05
 362:	84 83       	std	Z+4, r24	; 0x04
 364:	11 c0       	rjmp	.+34     	; 0x388 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x50>
 366:	6e 30       	cpi	r22, 0x0E	; 14
 368:	c0 f4       	brcc	.+48     	; 0x39a <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x62>
 36a:	83 e2       	ldi	r24, 0x23	; 35
 36c:	90 e0       	ldi	r25, 0x00	; 0
 36e:	91 83       	std	Z+1, r25	; 0x01
 370:	80 83       	st	Z, r24
 372:	85 e2       	ldi	r24, 0x25	; 37
 374:	90 e0       	ldi	r25, 0x00	; 0
 376:	93 83       	std	Z+3, r25	; 0x03
 378:	82 83       	std	Z+2, r24	; 0x02
 37a:	84 e2       	ldi	r24, 0x24	; 36
 37c:	90 e0       	ldi	r25, 0x00	; 0
 37e:	95 83       	std	Z+5, r25	; 0x05
 380:	84 83       	std	Z+4, r24	; 0x04
 382:	70 e0       	ldi	r23, 0x00	; 0
 384:	68 50       	subi	r22, 0x08	; 8
 386:	70 40       	sbci	r23, 0x00	; 0
 388:	81 e0       	ldi	r24, 0x01	; 1
 38a:	90 e0       	ldi	r25, 0x00	; 0
 38c:	02 c0       	rjmp	.+4      	; 0x392 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x5a>
 38e:	88 0f       	add	r24, r24
 390:	99 1f       	adc	r25, r25
 392:	6a 95       	dec	r22
 394:	e2 f7       	brpl	.-8      	; 0x38e <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x56>
 396:	86 83       	std	Z+6, r24	; 0x06
 398:	08 95       	ret
 39a:	65 31       	cpi	r22, 0x15	; 21
 39c:	b8 f4       	brcc	.+46     	; 0x3cc <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x94>
 39e:	86 e2       	ldi	r24, 0x26	; 38
 3a0:	90 e0       	ldi	r25, 0x00	; 0
 3a2:	91 83       	std	Z+1, r25	; 0x01
 3a4:	80 83       	st	Z, r24
 3a6:	88 e2       	ldi	r24, 0x28	; 40
 3a8:	90 e0       	ldi	r25, 0x00	; 0
 3aa:	93 83       	std	Z+3, r25	; 0x03
 3ac:	82 83       	std	Z+2, r24	; 0x02
 3ae:	87 e2       	ldi	r24, 0x27	; 39
 3b0:	90 e0       	ldi	r25, 0x00	; 0
 3b2:	95 83       	std	Z+5, r25	; 0x05
 3b4:	84 83       	std	Z+4, r24	; 0x04
 3b6:	70 e0       	ldi	r23, 0x00	; 0
 3b8:	6e 50       	subi	r22, 0x0E	; 14
 3ba:	70 40       	sbci	r23, 0x00	; 0
 3bc:	81 e0       	ldi	r24, 0x01	; 1
 3be:	90 e0       	ldi	r25, 0x00	; 0
 3c0:	02 c0       	rjmp	.+4      	; 0x3c6 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x8e>
 3c2:	88 0f       	add	r24, r24
 3c4:	99 1f       	adc	r25, r25
 3c6:	6a 95       	dec	r22
 3c8:	e2 f7       	brpl	.-8      	; 0x3c2 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x8a>
 3ca:	86 83       	std	Z+6, r24	; 0x06
 3cc:	08 95       	ret

000003ce <_ZN16PololuQTRSensors4initEhhh>:
 3ce:	a7 e0       	ldi	r26, 0x07	; 7
 3d0:	b0 e0       	ldi	r27, 0x00	; 0
 3d2:	ed ee       	ldi	r30, 0xED	; 237
 3d4:	f1 e0       	ldi	r31, 0x01	; 1
 3d6:	0c 94 94 06 	jmp	0xd28	; 0xd28 <__prologue_saves__+0x1c>
 3da:	8c 01       	movw	r16, r24
 3dc:	fc 01       	movw	r30, r24
 3de:	11 82       	std	Z+1, r1	; 0x01
 3e0:	10 82       	st	Z, r1
 3e2:	13 82       	std	Z+3, r1	; 0x03
 3e4:	12 82       	std	Z+2, r1	; 0x02
 3e6:	15 82       	std	Z+5, r1	; 0x05
 3e8:	14 82       	std	Z+4, r1	; 0x04
 3ea:	17 82       	std	Z+7, r1	; 0x07
 3ec:	16 82       	std	Z+6, r1	; 0x06
 3ee:	61 31       	cpi	r22, 0x11	; 17
 3f0:	18 f0       	brcs	.+6      	; 0x3f8 <_ZN16PololuQTRSensors4initEhhh+0x2a>
 3f2:	80 e1       	ldi	r24, 0x10	; 16
 3f4:	80 87       	std	Z+8, r24	; 0x08
 3f6:	02 c0       	rjmp	.+4      	; 0x3fc <_ZN16PololuQTRSensors4initEhhh+0x2e>
 3f8:	fc 01       	movw	r30, r24
 3fa:	60 87       	std	Z+8, r22	; 0x08
 3fc:	f8 01       	movw	r30, r16
 3fe:	20 8b       	std	Z+16, r18	; 0x10
 400:	ce 01       	movw	r24, r28
 402:	01 96       	adiw	r24, 0x01	; 1
 404:	64 2f       	mov	r22, r20
 406:	0e 94 9c 01 	call	0x338	; 0x338 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
 40a:	8f 81       	ldd	r24, Y+7	; 0x07
 40c:	f8 01       	movw	r30, r16
 40e:	81 87       	std	Z+9, r24	; 0x09
 410:	8b 81       	ldd	r24, Y+3	; 0x03
 412:	9c 81       	ldd	r25, Y+4	; 0x04
 414:	93 87       	std	Z+11, r25	; 0x0b
 416:	82 87       	std	Z+10, r24	; 0x0a
 418:	8d 81       	ldd	r24, Y+5	; 0x05
 41a:	9e 81       	ldd	r25, Y+6	; 0x06
 41c:	95 87       	std	Z+13, r25	; 0x0d
 41e:	84 87       	std	Z+12, r24	; 0x0c
 420:	27 96       	adiw	r28, 0x07	; 7
 422:	e4 e0       	ldi	r30, 0x04	; 4
 424:	0c 94 b0 06 	jmp	0xd60	; 0xd60 <__epilogue_restores__+0x1c>

00000428 <_ZN16PololuQTRSensors11emittersOffEv>:
 428:	fc 01       	movw	r30, r24
 42a:	a4 85       	ldd	r26, Z+12	; 0x0c
 42c:	b5 85       	ldd	r27, Z+13	; 0x0d
 42e:	10 97       	sbiw	r26, 0x00	; 0
 430:	79 f0       	breq	.+30     	; 0x450 <_ZN16PololuQTRSensors11emittersOffEv+0x28>
 432:	8c 91       	ld	r24, X
 434:	91 85       	ldd	r25, Z+9	; 0x09
 436:	89 2b       	or	r24, r25
 438:	8c 93       	st	X, r24
 43a:	a2 85       	ldd	r26, Z+10	; 0x0a
 43c:	b3 85       	ldd	r27, Z+11	; 0x0b
 43e:	9c 91       	ld	r25, X
 440:	81 85       	ldd	r24, Z+9	; 0x09
 442:	80 95       	com	r24
 444:	89 23       	and	r24, r25
 446:	8c 93       	st	X, r24
 448:	88 ec       	ldi	r24, 0xC8	; 200
 44a:	90 e0       	ldi	r25, 0x00	; 0
 44c:	0e 94 94 01 	call	0x328	; 0x328 <delayMicroseconds>
 450:	08 95       	ret

00000452 <_ZN16PololuQTRSensors10emittersOnEv>:
 452:	fc 01       	movw	r30, r24
 454:	a4 85       	ldd	r26, Z+12	; 0x0c
 456:	b5 85       	ldd	r27, Z+13	; 0x0d
 458:	10 97       	sbiw	r26, 0x00	; 0
 45a:	71 f0       	breq	.+28     	; 0x478 <_ZN16PololuQTRSensors10emittersOnEv+0x26>
 45c:	8c 91       	ld	r24, X
 45e:	91 85       	ldd	r25, Z+9	; 0x09
 460:	89 2b       	or	r24, r25
 462:	8c 93       	st	X, r24
 464:	a2 85       	ldd	r26, Z+10	; 0x0a
 466:	b3 85       	ldd	r27, Z+11	; 0x0b
 468:	8c 91       	ld	r24, X
 46a:	91 85       	ldd	r25, Z+9	; 0x09
 46c:	89 2b       	or	r24, r25
 46e:	8c 93       	st	X, r24
 470:	88 ec       	ldi	r24, 0xC8	; 200
 472:	90 e0       	ldi	r25, 0x00	; 0
 474:	0e 94 94 01 	call	0x328	; 0x328 <delayMicroseconds>
 478:	08 95       	ret

0000047a <_ZN18PololuQTRSensorsRC4initEPhhjh>:
 47a:	a7 e0       	ldi	r26, 0x07	; 7
 47c:	b0 e0       	ldi	r27, 0x00	; 0
 47e:	e3 e4       	ldi	r30, 0x43	; 67
 480:	f2 e0       	ldi	r31, 0x02	; 2
 482:	0c 94 86 06 	jmp	0xd0c	; 0xd0c <__prologue_saves__>
 486:	7c 01       	movw	r14, r24
 488:	1b 01       	movw	r2, r22
 48a:	64 2f       	mov	r22, r20
 48c:	39 01       	movw	r6, r18
 48e:	40 2f       	mov	r20, r16
 490:	20 e0       	ldi	r18, 0x00	; 0
 492:	0e 94 e7 01 	call	0x3ce	; 0x3ce <_ZN16PololuQTRSensors4initEhhh>
 496:	97 01       	movw	r18, r14
 498:	2f 5b       	subi	r18, 0xBF	; 191
 49a:	3f 4f       	sbci	r19, 0xFF	; 255
 49c:	f9 01       	movw	r30, r18
 49e:	10 82       	st	Z, r1
 4a0:	d7 01       	movw	r26, r14
 4a2:	ae 5b       	subi	r26, 0xBE	; 190
 4a4:	bf 4f       	sbci	r27, 0xFF	; 255
 4a6:	1c 92       	st	X, r1
 4a8:	c7 01       	movw	r24, r14
 4aa:	8d 5b       	subi	r24, 0xBD	; 189
 4ac:	9f 4f       	sbci	r25, 0xFF	; 255
 4ae:	fc 01       	movw	r30, r24
 4b0:	10 82       	st	Z, r1
 4b2:	f7 01       	movw	r30, r14
 4b4:	77 86       	std	Z+15, r7	; 0x0f
 4b6:	66 86       	std	Z+14, r6	; 0x0e
 4b8:	66 24       	eor	r6, r6
 4ba:	2e 01       	movw	r4, r28
 4bc:	08 94       	sec
 4be:	41 1c       	adc	r4, r1
 4c0:	51 1c       	adc	r5, r1
 4c2:	6c 01       	movw	r12, r24
 4c4:	5d 01       	movw	r10, r26
 4c6:	49 01       	movw	r8, r18
 4c8:	29 c0       	rjmp	.+82     	; 0x51c <_ZN18PololuQTRSensorsRC4initEPhhjh+0xa2>
 4ca:	06 2d       	mov	r16, r6
 4cc:	10 e0       	ldi	r17, 0x00	; 0
 4ce:	f1 01       	movw	r30, r2
 4d0:	e0 0f       	add	r30, r16
 4d2:	f1 1f       	adc	r31, r17
 4d4:	c2 01       	movw	r24, r4
 4d6:	60 81       	ld	r22, Z
 4d8:	0e 94 9c 01 	call	0x338	; 0x338 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
 4dc:	2f 81       	ldd	r18, Y+7	; 0x07
 4de:	f7 01       	movw	r30, r14
 4e0:	e0 0f       	add	r30, r16
 4e2:	f1 1f       	adc	r31, r17
 4e4:	21 8b       	std	Z+17, r18	; 0x11
 4e6:	89 81       	ldd	r24, Y+1	; 0x01
 4e8:	9a 81       	ldd	r25, Y+2	; 0x02
 4ea:	f8 01       	movw	r30, r16
 4ec:	ee 0f       	add	r30, r30
 4ee:	ff 1f       	adc	r31, r31
 4f0:	ee 0d       	add	r30, r14
 4f2:	ff 1d       	adc	r31, r15
 4f4:	92 a3       	std	Z+34, r25	; 0x22
 4f6:	81 a3       	std	Z+33, r24	; 0x21
 4f8:	83 32       	cpi	r24, 0x23	; 35
 4fa:	91 05       	cpc	r25, r1
 4fc:	11 f4       	brne	.+4      	; 0x502 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x88>
 4fe:	f4 01       	movw	r30, r8
 500:	09 c0       	rjmp	.+18     	; 0x514 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x9a>
 502:	86 32       	cpi	r24, 0x26	; 38
 504:	91 05       	cpc	r25, r1
 506:	11 f4       	brne	.+4      	; 0x50c <_ZN18PololuQTRSensorsRC4initEPhhjh+0x92>
 508:	f5 01       	movw	r30, r10
 50a:	04 c0       	rjmp	.+8      	; 0x514 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x9a>
 50c:	89 32       	cpi	r24, 0x29	; 41
 50e:	91 05       	cpc	r25, r1
 510:	21 f4       	brne	.+8      	; 0x51a <_ZN18PololuQTRSensorsRC4initEPhhjh+0xa0>
 512:	f6 01       	movw	r30, r12
 514:	80 81       	ld	r24, Z
 516:	82 2b       	or	r24, r18
 518:	80 83       	st	Z, r24
 51a:	63 94       	inc	r6
 51c:	f7 01       	movw	r30, r14
 51e:	80 85       	ldd	r24, Z+8	; 0x08
 520:	68 16       	cp	r6, r24
 522:	98 f2       	brcs	.-90     	; 0x4ca <_ZN18PololuQTRSensorsRC4initEPhhjh+0x50>
 524:	27 96       	adiw	r28, 0x07	; 7
 526:	e2 e1       	ldi	r30, 0x12	; 18
 528:	0c 94 a2 06 	jmp	0xd44	; 0xd44 <__epilogue_restores__>

0000052c <qtr_rc_init>:
 52c:	a0 e0       	ldi	r26, 0x00	; 0
 52e:	b0 e0       	ldi	r27, 0x00	; 0
 530:	ec e9       	ldi	r30, 0x9C	; 156
 532:	f2 e0       	ldi	r31, 0x02	; 2
 534:	0c 94 8e 06 	jmp	0xd1c	; 0xd1c <__prologue_saves__+0x10>
 538:	7c 01       	movw	r14, r24
 53a:	16 2f       	mov	r17, r22
 53c:	6a 01       	movw	r12, r20
 53e:	02 2f       	mov	r16, r18
 540:	84 e4       	ldi	r24, 0x44	; 68
 542:	90 e0       	ldi	r25, 0x00	; 0
 544:	0e 94 cc 06 	call	0xd98	; 0xd98 <malloc>
 548:	a8 2e       	mov	r10, r24
 54a:	e5 01       	movw	r28, r10
 54c:	5e 01       	movw	r10, r28
 54e:	b9 2e       	mov	r11, r25
 550:	e5 01       	movw	r28, r10
 552:	20 97       	sbiw	r28, 0x00	; 0
 554:	61 f0       	breq	.+24     	; 0x56e <qtr_rc_init+0x42>
 556:	c5 01       	movw	r24, r10
 558:	b7 01       	movw	r22, r14
 55a:	41 2f       	mov	r20, r17
 55c:	96 01       	movw	r18, r12
 55e:	0e 94 3d 02 	call	0x47a	; 0x47a <_ZN18PololuQTRSensorsRC4initEPhhjh>
 562:	b0 92 11 01 	sts	0x0111, r11
 566:	a0 92 10 01 	sts	0x0110, r10
 56a:	81 e0       	ldi	r24, 0x01	; 1
 56c:	01 c0       	rjmp	.+2      	; 0x570 <qtr_rc_init+0x44>
 56e:	80 e0       	ldi	r24, 0x00	; 0
 570:	cd b7       	in	r28, 0x3d	; 61
 572:	de b7       	in	r29, 0x3e	; 62
 574:	ea e0       	ldi	r30, 0x0A	; 10
 576:	0c 94 aa 06 	jmp	0xd54	; 0xd54 <__epilogue_restores__+0x10>

0000057a <_ZN18PololuQTRSensorsRC11readPrivateEPj>:
 57a:	a0 e0       	ldi	r26, 0x00	; 0
 57c:	b0 e0       	ldi	r27, 0x00	; 0
 57e:	e3 ec       	ldi	r30, 0xC3	; 195
 580:	f2 e0       	ldi	r31, 0x02	; 2
 582:	0c 94 8b 06 	jmp	0xd16	; 0xd16 <__prologue_saves__+0xa>
 586:	ec 01       	movw	r28, r24
 588:	5b 01       	movw	r10, r22
 58a:	fc 01       	movw	r30, r24
 58c:	ef 5b       	subi	r30, 0xBF	; 191
 58e:	ff 4f       	sbci	r31, 0xFF	; 255
 590:	90 80       	ld	r9, Z
 592:	fc 01       	movw	r30, r24
 594:	ee 5b       	subi	r30, 0xBE	; 190
 596:	ff 4f       	sbci	r31, 0xFF	; 255
 598:	80 80       	ld	r8, Z
 59a:	fc 01       	movw	r30, r24
 59c:	ed 5b       	subi	r30, 0xBD	; 189
 59e:	ff 4f       	sbci	r31, 0xFF	; 255
 5a0:	70 80       	ld	r7, Z
 5a2:	80 e0       	ldi	r24, 0x00	; 0
 5a4:	09 c0       	rjmp	.+18     	; 0x5b8 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x3e>
 5a6:	e8 2f       	mov	r30, r24
 5a8:	f0 e0       	ldi	r31, 0x00	; 0
 5aa:	ee 0f       	add	r30, r30
 5ac:	ff 1f       	adc	r31, r31
 5ae:	ea 0d       	add	r30, r10
 5b0:	fb 1d       	adc	r31, r11
 5b2:	11 82       	std	Z+1, r1	; 0x01
 5b4:	10 82       	st	Z, r1
 5b6:	8f 5f       	subi	r24, 0xFF	; 255
 5b8:	98 85       	ldd	r25, Y+8	; 0x08
 5ba:	89 17       	cp	r24, r25
 5bc:	a0 f3       	brcs	.-24     	; 0x5a6 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x2c>
 5be:	84 b1       	in	r24, 0x04	; 4
 5c0:	21 e4       	ldi	r18, 0x41	; 65
 5c2:	e2 2e       	mov	r14, r18
 5c4:	f1 2c       	mov	r15, r1
 5c6:	ec 0e       	add	r14, r28
 5c8:	fd 1e       	adc	r15, r29
 5ca:	d7 01       	movw	r26, r14
 5cc:	9c 91       	ld	r25, X
 5ce:	89 2b       	or	r24, r25
 5d0:	84 b9       	out	0x04, r24	; 4
 5d2:	87 b1       	in	r24, 0x07	; 7
 5d4:	8e 01       	movw	r16, r28
 5d6:	0e 5b       	subi	r16, 0xBE	; 190
 5d8:	1f 4f       	sbci	r17, 0xFF	; 255
 5da:	f8 01       	movw	r30, r16
 5dc:	90 81       	ld	r25, Z
 5de:	89 2b       	or	r24, r25
 5e0:	87 b9       	out	0x07, r24	; 7
 5e2:	8a b1       	in	r24, 0x0a	; 10
 5e4:	93 e4       	ldi	r25, 0x43	; 67
 5e6:	c9 2e       	mov	r12, r25
 5e8:	d1 2c       	mov	r13, r1
 5ea:	cc 0e       	add	r12, r28
 5ec:	dd 1e       	adc	r13, r29
 5ee:	d6 01       	movw	r26, r12
 5f0:	9c 91       	ld	r25, X
 5f2:	89 2b       	or	r24, r25
 5f4:	8a b9       	out	0x0a, r24	; 10
 5f6:	85 b1       	in	r24, 0x05	; 5
 5f8:	f7 01       	movw	r30, r14
 5fa:	90 81       	ld	r25, Z
 5fc:	89 2b       	or	r24, r25
 5fe:	85 b9       	out	0x05, r24	; 5
 600:	88 b1       	in	r24, 0x08	; 8
 602:	d8 01       	movw	r26, r16
 604:	9c 91       	ld	r25, X
 606:	89 2b       	or	r24, r25
 608:	88 b9       	out	0x08, r24	; 8
 60a:	8b b1       	in	r24, 0x0b	; 11
 60c:	f6 01       	movw	r30, r12
 60e:	90 81       	ld	r25, Z
 610:	89 2b       	or	r24, r25
 612:	8b b9       	out	0x0b, r24	; 11
 614:	8a e0       	ldi	r24, 0x0A	; 10
 616:	90 e0       	ldi	r25, 0x00	; 0
 618:	0e 94 94 01 	call	0x328	; 0x328 <delayMicroseconds>
 61c:	94 b1       	in	r25, 0x04	; 4
 61e:	d7 01       	movw	r26, r14
 620:	8c 91       	ld	r24, X
 622:	80 95       	com	r24
 624:	89 23       	and	r24, r25
 626:	84 b9       	out	0x04, r24	; 4
 628:	97 b1       	in	r25, 0x07	; 7
 62a:	f8 01       	movw	r30, r16
 62c:	80 81       	ld	r24, Z
 62e:	80 95       	com	r24
 630:	89 23       	and	r24, r25
 632:	87 b9       	out	0x07, r24	; 7
 634:	9a b1       	in	r25, 0x0a	; 10
 636:	d6 01       	movw	r26, r12
 638:	8c 91       	ld	r24, X
 63a:	80 95       	com	r24
 63c:	89 23       	and	r24, r25
 63e:	8a b9       	out	0x0a, r24	; 10
 640:	95 b1       	in	r25, 0x05	; 5
 642:	f7 01       	movw	r30, r14
 644:	80 81       	ld	r24, Z
 646:	80 95       	com	r24
 648:	89 23       	and	r24, r25
 64a:	85 b9       	out	0x05, r24	; 5
 64c:	98 b1       	in	r25, 0x08	; 8
 64e:	d8 01       	movw	r26, r16
 650:	8c 91       	ld	r24, X
 652:	80 95       	com	r24
 654:	89 23       	and	r24, r25
 656:	88 b9       	out	0x08, r24	; 8
 658:	9b b1       	in	r25, 0x0b	; 11
 65a:	f6 01       	movw	r30, r12
 65c:	80 81       	ld	r24, Z
 65e:	80 95       	com	r24
 660:	89 23       	and	r24, r25
 662:	8b b9       	out	0x0b, r24	; 11
 664:	c0 90 b0 00 	lds	r12, 0x00B0
 668:	e0 90 b1 00 	lds	r14, 0x00B1
 66c:	80 91 b0 00 	lds	r24, 0x00B0
 670:	83 60       	ori	r24, 0x03	; 3
 672:	80 93 b0 00 	sts	0x00B0, r24
 676:	82 e0       	ldi	r24, 0x02	; 2
 678:	80 93 b1 00 	sts	0x00B1, r24
 67c:	00 91 b2 00 	lds	r16, 0x00B2
 680:	80 e0       	ldi	r24, 0x00	; 0
 682:	90 e0       	ldi	r25, 0x00	; 0
 684:	39 c0       	rjmp	.+114    	; 0x6f8 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x17e>
 686:	20 91 b2 00 	lds	r18, 0x00B2
 68a:	20 1b       	sub	r18, r16
 68c:	82 0f       	add	r24, r18
 68e:	91 1d       	adc	r25, r1
 690:	02 0f       	add	r16, r18
 692:	f3 b0       	in	r15, 0x03	; 3
 694:	f9 14       	cp	r15, r9
 696:	09 f0       	breq	.+2      	; 0x69a <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x120>
 698:	4d c0       	rjmp	.+154    	; 0x734 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1ba>
 69a:	96 b0       	in	r9, 0x06	; 6
 69c:	98 14       	cp	r9, r8
 69e:	09 f0       	breq	.+2      	; 0x6a2 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x128>
 6a0:	49 c0       	rjmp	.+146    	; 0x734 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1ba>
 6a2:	29 b1       	in	r18, 0x09	; 9
 6a4:	27 15       	cp	r18, r7
 6a6:	09 f0       	breq	.+2      	; 0x6aa <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x130>
 6a8:	45 c0       	rjmp	.+138    	; 0x734 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1ba>
 6aa:	24 c0       	rjmp	.+72     	; 0x6f4 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x17a>
 6ac:	21 2f       	mov	r18, r17
 6ae:	30 e0       	ldi	r19, 0x00	; 0
 6b0:	a9 01       	movw	r20, r18
 6b2:	44 0f       	add	r20, r20
 6b4:	55 1f       	adc	r21, r21
 6b6:	f5 01       	movw	r30, r10
 6b8:	e4 0f       	add	r30, r20
 6ba:	f5 1f       	adc	r31, r21
 6bc:	60 81       	ld	r22, Z
 6be:	71 81       	ldd	r23, Z+1	; 0x01
 6c0:	61 15       	cp	r22, r1
 6c2:	71 05       	cpc	r23, r1
 6c4:	99 f4       	brne	.+38     	; 0x6ec <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x172>
 6c6:	4c 0f       	add	r20, r28
 6c8:	5d 1f       	adc	r21, r29
 6ca:	da 01       	movw	r26, r20
 6cc:	91 96       	adiw	r26, 0x21	; 33
 6ce:	4d 91       	ld	r20, X+
 6d0:	5c 91       	ld	r21, X
 6d2:	92 97       	sbiw	r26, 0x22	; 34
 6d4:	da 01       	movw	r26, r20
 6d6:	4c 91       	ld	r20, X
 6d8:	2c 0f       	add	r18, r28
 6da:	3d 1f       	adc	r19, r29
 6dc:	d9 01       	movw	r26, r18
 6de:	51 96       	adiw	r26, 0x11	; 17
 6e0:	2c 91       	ld	r18, X
 6e2:	51 97       	sbiw	r26, 0x11	; 17
 6e4:	42 23       	and	r20, r18
 6e6:	11 f4       	brne	.+4      	; 0x6ec <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x172>
 6e8:	91 83       	std	Z+1, r25	; 0x01
 6ea:	80 83       	st	Z, r24
 6ec:	1f 5f       	subi	r17, 0xFF	; 255
 6ee:	28 85       	ldd	r18, Y+8	; 0x08
 6f0:	12 17       	cp	r17, r18
 6f2:	e0 f2       	brcs	.-72     	; 0x6ac <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x132>
 6f4:	89 2c       	mov	r8, r9
 6f6:	9f 2c       	mov	r9, r15
 6f8:	2e 85       	ldd	r18, Y+14	; 0x0e
 6fa:	3f 85       	ldd	r19, Y+15	; 0x0f
 6fc:	82 17       	cp	r24, r18
 6fe:	93 07       	cpc	r25, r19
 700:	10 f2       	brcs	.-124    	; 0x686 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x10c>
 702:	c0 92 b0 00 	sts	0x00B0, r12
 706:	e0 92 b1 00 	sts	0x00B1, r14
 70a:	20 e0       	ldi	r18, 0x00	; 0
 70c:	0f c0       	rjmp	.+30     	; 0x72c <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1b2>
 70e:	e2 2f       	mov	r30, r18
 710:	f0 e0       	ldi	r31, 0x00	; 0
 712:	ee 0f       	add	r30, r30
 714:	ff 1f       	adc	r31, r31
 716:	ea 0d       	add	r30, r10
 718:	fb 1d       	adc	r31, r11
 71a:	80 81       	ld	r24, Z
 71c:	91 81       	ldd	r25, Z+1	; 0x01
 71e:	00 97       	sbiw	r24, 0x00	; 0
 720:	21 f4       	brne	.+8      	; 0x72a <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1b0>
 722:	8e 85       	ldd	r24, Y+14	; 0x0e
 724:	9f 85       	ldd	r25, Y+15	; 0x0f
 726:	91 83       	std	Z+1, r25	; 0x01
 728:	80 83       	st	Z, r24
 72a:	2f 5f       	subi	r18, 0xFF	; 255
 72c:	88 85       	ldd	r24, Y+8	; 0x08
 72e:	28 17       	cp	r18, r24
 730:	70 f3       	brcs	.-36     	; 0x70e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x194>
 732:	05 c0       	rjmp	.+10     	; 0x73e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1c4>
 734:	f3 b0       	in	r15, 0x03	; 3
 736:	96 b0       	in	r9, 0x06	; 6
 738:	79 b0       	in	r7, 0x09	; 9
 73a:	10 e0       	ldi	r17, 0x00	; 0
 73c:	d8 cf       	rjmp	.-80     	; 0x6ee <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x174>
 73e:	cd b7       	in	r28, 0x3d	; 61
 740:	de b7       	in	r29, 0x3e	; 62
 742:	ed e0       	ldi	r30, 0x0D	; 13
 744:	0c 94 a7 06 	jmp	0xd4e	; 0xd4e <__epilogue_restores__+0xa>

00000748 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>:
 748:	ef 92       	push	r14
 74a:	ff 92       	push	r15
 74c:	0f 93       	push	r16
 74e:	1f 93       	push	r17
 750:	cf 93       	push	r28
 752:	df 93       	push	r29
 754:	fc 01       	movw	r30, r24
 756:	9b 01       	movw	r18, r22
 758:	00 91 7c 00 	lds	r16, 0x007C
 75c:	10 91 7a 00 	lds	r17, 0x007A
 760:	e7 b0       	in	r14, 0x07	; 7
 762:	f8 b0       	in	r15, 0x08	; 8
 764:	80 91 7a 00 	lds	r24, 0x007A
 768:	86 fd       	sbrc	r24, 6
 76a:	fc cf       	rjmp	.-8      	; 0x764 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x1c>
 76c:	80 e0       	ldi	r24, 0x00	; 0
 76e:	0a c0       	rjmp	.+20     	; 0x784 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x3c>
 770:	a8 2f       	mov	r26, r24
 772:	b0 e0       	ldi	r27, 0x00	; 0
 774:	aa 0f       	add	r26, r26
 776:	bb 1f       	adc	r27, r27
 778:	a2 0f       	add	r26, r18
 77a:	b3 1f       	adc	r27, r19
 77c:	11 96       	adiw	r26, 0x01	; 1
 77e:	1c 92       	st	X, r1
 780:	1e 92       	st	-X, r1
 782:	8f 5f       	subi	r24, 0xFF	; 255
 784:	90 85       	ldd	r25, Z+8	; 0x08
 786:	89 17       	cp	r24, r25
 788:	98 f3       	brcs	.-26     	; 0x770 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x28>
 78a:	97 b1       	in	r25, 0x07	; 7
 78c:	82 a1       	ldd	r24, Z+34	; 0x22
 78e:	80 95       	com	r24
 790:	89 23       	and	r24, r25
 792:	87 b9       	out	0x07, r24	; 7
 794:	98 b1       	in	r25, 0x08	; 8
 796:	82 a1       	ldd	r24, Z+34	; 0x22
 798:	80 95       	com	r24
 79a:	89 23       	and	r24, r25
 79c:	88 b9       	out	0x08, r24	; 8
 79e:	87 e8       	ldi	r24, 0x87	; 135
 7a0:	80 93 7a 00 	sts	0x007A, r24
 7a4:	70 e0       	ldi	r23, 0x00	; 0
 7a6:	29 c0       	rjmp	.+82     	; 0x7fa <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb2>
 7a8:	df 01       	movw	r26, r30
 7aa:	a6 0f       	add	r26, r22
 7ac:	b1 1d       	adc	r27, r1
 7ae:	51 96       	adiw	r26, 0x11	; 17
 7b0:	8c 91       	ld	r24, X
 7b2:	51 97       	sbiw	r26, 0x11	; 17
 7b4:	80 64       	ori	r24, 0x40	; 64
 7b6:	80 93 7c 00 	sts	0x007C, r24
 7ba:	80 91 7a 00 	lds	r24, 0x007A
 7be:	80 64       	ori	r24, 0x40	; 64
 7c0:	80 93 7a 00 	sts	0x007A, r24
 7c4:	80 91 7a 00 	lds	r24, 0x007A
 7c8:	86 fd       	sbrc	r24, 6
 7ca:	fc cf       	rjmp	.-8      	; 0x7c4 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x7c>
 7cc:	a6 2f       	mov	r26, r22
 7ce:	b0 e0       	ldi	r27, 0x00	; 0
 7d0:	aa 0f       	add	r26, r26
 7d2:	bb 1f       	adc	r27, r27
 7d4:	a2 0f       	add	r26, r18
 7d6:	b3 1f       	adc	r27, r19
 7d8:	40 91 78 00 	lds	r20, 0x0078
 7dc:	50 91 79 00 	lds	r21, 0x0079
 7e0:	8d 91       	ld	r24, X+
 7e2:	9c 91       	ld	r25, X
 7e4:	11 97       	sbiw	r26, 0x01	; 1
 7e6:	84 0f       	add	r24, r20
 7e8:	95 1f       	adc	r25, r21
 7ea:	11 96       	adiw	r26, 0x01	; 1
 7ec:	9c 93       	st	X, r25
 7ee:	8e 93       	st	-X, r24
 7f0:	6f 5f       	subi	r22, 0xFF	; 255
 7f2:	80 85       	ldd	r24, Z+8	; 0x08
 7f4:	68 17       	cp	r22, r24
 7f6:	c0 f2       	brcs	.-80     	; 0x7a8 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x60>
 7f8:	7f 5f       	subi	r23, 0xFF	; 255
 7fa:	81 a1       	ldd	r24, Z+33	; 0x21
 7fc:	78 17       	cp	r23, r24
 7fe:	10 f4       	brcc	.+4      	; 0x804 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xbc>
 800:	60 e0       	ldi	r22, 0x00	; 0
 802:	f7 cf       	rjmp	.-18     	; 0x7f2 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xaa>
 804:	40 e0       	ldi	r20, 0x00	; 0
 806:	14 c0       	rjmp	.+40     	; 0x830 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xe8>
 808:	c4 2f       	mov	r28, r20
 80a:	d0 e0       	ldi	r29, 0x00	; 0
 80c:	cc 0f       	add	r28, r28
 80e:	dd 1f       	adc	r29, r29
 810:	c2 0f       	add	r28, r18
 812:	d3 1f       	adc	r29, r19
 814:	61 a1       	ldd	r22, Z+33	; 0x21
 816:	70 e0       	ldi	r23, 0x00	; 0
 818:	cb 01       	movw	r24, r22
 81a:	95 95       	asr	r25
 81c:	87 95       	ror	r24
 81e:	a8 81       	ld	r26, Y
 820:	b9 81       	ldd	r27, Y+1	; 0x01
 822:	8a 0f       	add	r24, r26
 824:	9b 1f       	adc	r25, r27
 826:	0e 94 26 06 	call	0xc4c	; 0xc4c <__udivmodhi4>
 82a:	79 83       	std	Y+1, r23	; 0x01
 82c:	68 83       	st	Y, r22
 82e:	4f 5f       	subi	r20, 0xFF	; 255
 830:	80 85       	ldd	r24, Z+8	; 0x08
 832:	48 17       	cp	r20, r24
 834:	48 f3       	brcs	.-46     	; 0x808 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xc0>
 836:	00 93 7c 00 	sts	0x007C, r16
 83a:	10 93 7a 00 	sts	0x007A, r17
 83e:	f8 b8       	out	0x08, r15	; 8
 840:	e7 b8       	out	0x07, r14	; 7
 842:	cd b7       	in	r28, 0x3d	; 61
 844:	de b7       	in	r29, 0x3e	; 62
 846:	e6 e0       	ldi	r30, 0x06	; 6
 848:	0c 94 ae 06 	jmp	0xd5c	; 0xd5c <__epilogue_restores__+0x18>

0000084c <_ZN16PololuQTRSensors4readEPjh>:
 84c:	a0 e2       	ldi	r26, 0x20	; 32
 84e:	b0 e0       	ldi	r27, 0x00	; 0
 850:	ec e2       	ldi	r30, 0x2C	; 44
 852:	f4 e0       	ldi	r31, 0x04	; 4
 854:	0c 94 91 06 	jmp	0xd22	; 0xd22 <__prologue_saves__+0x16>
 858:	8c 01       	movw	r16, r24
 85a:	7b 01       	movw	r14, r22
 85c:	d4 2e       	mov	r13, r20
 85e:	84 2f       	mov	r24, r20
 860:	81 50       	subi	r24, 0x01	; 1
 862:	82 30       	cpi	r24, 0x02	; 2
 864:	18 f4       	brcc	.+6      	; 0x86c <_ZN16PololuQTRSensors4readEPjh+0x20>
 866:	c8 01       	movw	r24, r16
 868:	0e 94 29 02 	call	0x452	; 0x452 <_ZN16PololuQTRSensors10emittersOnEv>
 86c:	d8 01       	movw	r26, r16
 86e:	50 96       	adiw	r26, 0x10	; 16
 870:	8c 91       	ld	r24, X
 872:	50 97       	sbiw	r26, 0x10	; 16
 874:	88 23       	and	r24, r24
 876:	89 f4       	brne	.+34     	; 0x89a <_ZN16PololuQTRSensors4readEPjh+0x4e>
 878:	c8 01       	movw	r24, r16
 87a:	b7 01       	movw	r22, r14
 87c:	0e 94 bd 02 	call	0x57a	; 0x57a <_ZN18PololuQTRSensorsRC11readPrivateEPj>
 880:	c8 01       	movw	r24, r16
 882:	0e 94 14 02 	call	0x428	; 0x428 <_ZN16PololuQTRSensors11emittersOffEv>
 886:	bd 2d       	mov	r27, r13
 888:	b2 30       	cpi	r27, 0x02	; 2
 88a:	d9 f5       	brne	.+118    	; 0x902 <__stack+0x3>
 88c:	c8 01       	movw	r24, r16
 88e:	be 01       	movw	r22, r28
 890:	6f 5f       	subi	r22, 0xFF	; 255
 892:	7f 4f       	sbci	r23, 0xFF	; 255
 894:	0e 94 bd 02 	call	0x57a	; 0x57a <_ZN18PololuQTRSensorsRC11readPrivateEPj>
 898:	10 c0       	rjmp	.+32     	; 0x8ba <_ZN16PololuQTRSensors4readEPjh+0x6e>
 89a:	c8 01       	movw	r24, r16
 89c:	b7 01       	movw	r22, r14
 89e:	0e 94 a4 03 	call	0x748	; 0x748 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
 8a2:	c8 01       	movw	r24, r16
 8a4:	0e 94 14 02 	call	0x428	; 0x428 <_ZN16PololuQTRSensors11emittersOffEv>
 8a8:	ed 2d       	mov	r30, r13
 8aa:	e2 30       	cpi	r30, 0x02	; 2
 8ac:	51 f5       	brne	.+84     	; 0x902 <__stack+0x3>
 8ae:	c8 01       	movw	r24, r16
 8b0:	be 01       	movw	r22, r28
 8b2:	6f 5f       	subi	r22, 0xFF	; 255
 8b4:	7f 4f       	sbci	r23, 0xFF	; 255
 8b6:	0e 94 a4 03 	call	0x748	; 0x748 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
 8ba:	60 e0       	ldi	r22, 0x00	; 0
 8bc:	ae 01       	movw	r20, r28
 8be:	4f 5f       	subi	r20, 0xFF	; 255
 8c0:	5f 4f       	sbci	r21, 0xFF	; 255
 8c2:	1b c0       	rjmp	.+54     	; 0x8fa <_ZN16PololuQTRSensors4readEPjh+0xae>
 8c4:	86 2f       	mov	r24, r22
 8c6:	90 e0       	ldi	r25, 0x00	; 0
 8c8:	88 0f       	add	r24, r24
 8ca:	99 1f       	adc	r25, r25
 8cc:	f7 01       	movw	r30, r14
 8ce:	e8 0f       	add	r30, r24
 8d0:	f9 1f       	adc	r31, r25
 8d2:	84 0f       	add	r24, r20
 8d4:	95 1f       	adc	r25, r21
 8d6:	d8 01       	movw	r26, r16
 8d8:	1e 96       	adiw	r26, 0x0e	; 14
 8da:	2d 91       	ld	r18, X+
 8dc:	3c 91       	ld	r19, X
 8de:	1f 97       	sbiw	r26, 0x0f	; 15
 8e0:	dc 01       	movw	r26, r24
 8e2:	8d 91       	ld	r24, X+
 8e4:	9c 91       	ld	r25, X
 8e6:	11 97       	sbiw	r26, 0x01	; 1
 8e8:	28 1b       	sub	r18, r24
 8ea:	39 0b       	sbc	r19, r25
 8ec:	80 81       	ld	r24, Z
 8ee:	91 81       	ldd	r25, Z+1	; 0x01
 8f0:	82 0f       	add	r24, r18
 8f2:	93 1f       	adc	r25, r19
 8f4:	91 83       	std	Z+1, r25	; 0x01
 8f6:	80 83       	st	Z, r24
 8f8:	6f 5f       	subi	r22, 0xFF	; 255
 8fa:	f8 01       	movw	r30, r16
 8fc:	80 85       	ldd	r24, Z+8	; 0x08
 8fe:	68 17       	cp	r22, r24
 900:	08 f3       	brcs	.-62     	; 0x8c4 <_ZN16PololuQTRSensors4readEPjh+0x78>
 902:	a0 96       	adiw	r28, 0x20	; 32
 904:	e7 e0       	ldi	r30, 0x07	; 7
 906:	0c 94 ad 06 	jmp	0xd5a	; 0xd5a <__epilogue_restores__+0x16>

0000090a <qtr_read>:
 90a:	9c 01       	movw	r18, r24
 90c:	46 2f       	mov	r20, r22
 90e:	80 91 10 01 	lds	r24, 0x0110
 912:	90 91 11 01 	lds	r25, 0x0111
 916:	b9 01       	movw	r22, r18
 918:	0e 94 26 04 	call	0x84c	; 0x84c <_ZN16PololuQTRSensors4readEPjh>
 91c:	08 95       	ret

0000091e <__subsf3>:
 91e:	50 58       	subi	r21, 0x80	; 128

00000920 <__addsf3>:
 920:	bb 27       	eor	r27, r27
 922:	aa 27       	eor	r26, r26
 924:	0e d0       	rcall	.+28     	; 0x942 <__addsf3x>
 926:	e5 c0       	rjmp	.+458    	; 0xaf2 <__fp_round>
 928:	d6 d0       	rcall	.+428    	; 0xad6 <__fp_pscA>
 92a:	30 f0       	brcs	.+12     	; 0x938 <__addsf3+0x18>
 92c:	db d0       	rcall	.+438    	; 0xae4 <__fp_pscB>
 92e:	20 f0       	brcs	.+8      	; 0x938 <__addsf3+0x18>
 930:	31 f4       	brne	.+12     	; 0x93e <__addsf3+0x1e>
 932:	9f 3f       	cpi	r25, 0xFF	; 255
 934:	11 f4       	brne	.+4      	; 0x93a <__addsf3+0x1a>
 936:	1e f4       	brtc	.+6      	; 0x93e <__addsf3+0x1e>
 938:	cb c0       	rjmp	.+406    	; 0xad0 <__fp_nan>
 93a:	0e f4       	brtc	.+2      	; 0x93e <__addsf3+0x1e>
 93c:	e0 95       	com	r30
 93e:	e7 fb       	bst	r30, 7
 940:	c1 c0       	rjmp	.+386    	; 0xac4 <__fp_inf>

00000942 <__addsf3x>:
 942:	e9 2f       	mov	r30, r25
 944:	e7 d0       	rcall	.+462    	; 0xb14 <__fp_split3>
 946:	80 f3       	brcs	.-32     	; 0x928 <__addsf3+0x8>
 948:	ba 17       	cp	r27, r26
 94a:	62 07       	cpc	r22, r18
 94c:	73 07       	cpc	r23, r19
 94e:	84 07       	cpc	r24, r20
 950:	95 07       	cpc	r25, r21
 952:	18 f0       	brcs	.+6      	; 0x95a <__addsf3x+0x18>
 954:	71 f4       	brne	.+28     	; 0x972 <__addsf3x+0x30>
 956:	9e f5       	brtc	.+102    	; 0x9be <__addsf3x+0x7c>
 958:	ff c0       	rjmp	.+510    	; 0xb58 <__fp_zero>
 95a:	0e f4       	brtc	.+2      	; 0x95e <__addsf3x+0x1c>
 95c:	e0 95       	com	r30
 95e:	0b 2e       	mov	r0, r27
 960:	ba 2f       	mov	r27, r26
 962:	a0 2d       	mov	r26, r0
 964:	0b 01       	movw	r0, r22
 966:	b9 01       	movw	r22, r18
 968:	90 01       	movw	r18, r0
 96a:	0c 01       	movw	r0, r24
 96c:	ca 01       	movw	r24, r20
 96e:	a0 01       	movw	r20, r0
 970:	11 24       	eor	r1, r1
 972:	ff 27       	eor	r31, r31
 974:	59 1b       	sub	r21, r25
 976:	99 f0       	breq	.+38     	; 0x99e <__addsf3x+0x5c>
 978:	59 3f       	cpi	r21, 0xF9	; 249
 97a:	50 f4       	brcc	.+20     	; 0x990 <__addsf3x+0x4e>
 97c:	50 3e       	cpi	r21, 0xE0	; 224
 97e:	68 f1       	brcs	.+90     	; 0x9da <__addsf3x+0x98>
 980:	1a 16       	cp	r1, r26
 982:	f0 40       	sbci	r31, 0x00	; 0
 984:	a2 2f       	mov	r26, r18
 986:	23 2f       	mov	r18, r19
 988:	34 2f       	mov	r19, r20
 98a:	44 27       	eor	r20, r20
 98c:	58 5f       	subi	r21, 0xF8	; 248
 98e:	f3 cf       	rjmp	.-26     	; 0x976 <__addsf3x+0x34>
 990:	46 95       	lsr	r20
 992:	37 95       	ror	r19
 994:	27 95       	ror	r18
 996:	a7 95       	ror	r26
 998:	f0 40       	sbci	r31, 0x00	; 0
 99a:	53 95       	inc	r21
 99c:	c9 f7       	brne	.-14     	; 0x990 <__addsf3x+0x4e>
 99e:	7e f4       	brtc	.+30     	; 0x9be <__addsf3x+0x7c>
 9a0:	1f 16       	cp	r1, r31
 9a2:	ba 0b       	sbc	r27, r26
 9a4:	62 0b       	sbc	r22, r18
 9a6:	73 0b       	sbc	r23, r19
 9a8:	84 0b       	sbc	r24, r20
 9aa:	ba f0       	brmi	.+46     	; 0x9da <__addsf3x+0x98>
 9ac:	91 50       	subi	r25, 0x01	; 1
 9ae:	a1 f0       	breq	.+40     	; 0x9d8 <__addsf3x+0x96>
 9b0:	ff 0f       	add	r31, r31
 9b2:	bb 1f       	adc	r27, r27
 9b4:	66 1f       	adc	r22, r22
 9b6:	77 1f       	adc	r23, r23
 9b8:	88 1f       	adc	r24, r24
 9ba:	c2 f7       	brpl	.-16     	; 0x9ac <__addsf3x+0x6a>
 9bc:	0e c0       	rjmp	.+28     	; 0x9da <__addsf3x+0x98>
 9be:	ba 0f       	add	r27, r26
 9c0:	62 1f       	adc	r22, r18
 9c2:	73 1f       	adc	r23, r19
 9c4:	84 1f       	adc	r24, r20
 9c6:	48 f4       	brcc	.+18     	; 0x9da <__addsf3x+0x98>
 9c8:	87 95       	ror	r24
 9ca:	77 95       	ror	r23
 9cc:	67 95       	ror	r22
 9ce:	b7 95       	ror	r27
 9d0:	f7 95       	ror	r31
 9d2:	9e 3f       	cpi	r25, 0xFE	; 254
 9d4:	08 f0       	brcs	.+2      	; 0x9d8 <__addsf3x+0x96>
 9d6:	b3 cf       	rjmp	.-154    	; 0x93e <__addsf3+0x1e>
 9d8:	93 95       	inc	r25
 9da:	88 0f       	add	r24, r24
 9dc:	08 f0       	brcs	.+2      	; 0x9e0 <__addsf3x+0x9e>
 9de:	99 27       	eor	r25, r25
 9e0:	ee 0f       	add	r30, r30
 9e2:	97 95       	ror	r25
 9e4:	87 95       	ror	r24
 9e6:	08 95       	ret

000009e8 <__fixsfsi>:
 9e8:	04 d0       	rcall	.+8      	; 0x9f2 <__fixunssfsi>
 9ea:	68 94       	set
 9ec:	b1 11       	cpse	r27, r1
 9ee:	b5 c0       	rjmp	.+362    	; 0xb5a <__fp_szero>
 9f0:	08 95       	ret

000009f2 <__fixunssfsi>:
 9f2:	98 d0       	rcall	.+304    	; 0xb24 <__fp_splitA>
 9f4:	88 f0       	brcs	.+34     	; 0xa18 <__fixunssfsi+0x26>
 9f6:	9f 57       	subi	r25, 0x7F	; 127
 9f8:	90 f0       	brcs	.+36     	; 0xa1e <__fixunssfsi+0x2c>
 9fa:	b9 2f       	mov	r27, r25
 9fc:	99 27       	eor	r25, r25
 9fe:	b7 51       	subi	r27, 0x17	; 23
 a00:	a0 f0       	brcs	.+40     	; 0xa2a <__fixunssfsi+0x38>
 a02:	d1 f0       	breq	.+52     	; 0xa38 <__fixunssfsi+0x46>
 a04:	66 0f       	add	r22, r22
 a06:	77 1f       	adc	r23, r23
 a08:	88 1f       	adc	r24, r24
 a0a:	99 1f       	adc	r25, r25
 a0c:	1a f0       	brmi	.+6      	; 0xa14 <__fixunssfsi+0x22>
 a0e:	ba 95       	dec	r27
 a10:	c9 f7       	brne	.-14     	; 0xa04 <__fixunssfsi+0x12>
 a12:	12 c0       	rjmp	.+36     	; 0xa38 <__fixunssfsi+0x46>
 a14:	b1 30       	cpi	r27, 0x01	; 1
 a16:	81 f0       	breq	.+32     	; 0xa38 <__fixunssfsi+0x46>
 a18:	9f d0       	rcall	.+318    	; 0xb58 <__fp_zero>
 a1a:	b1 e0       	ldi	r27, 0x01	; 1
 a1c:	08 95       	ret
 a1e:	9c c0       	rjmp	.+312    	; 0xb58 <__fp_zero>
 a20:	67 2f       	mov	r22, r23
 a22:	78 2f       	mov	r23, r24
 a24:	88 27       	eor	r24, r24
 a26:	b8 5f       	subi	r27, 0xF8	; 248
 a28:	39 f0       	breq	.+14     	; 0xa38 <__fixunssfsi+0x46>
 a2a:	b9 3f       	cpi	r27, 0xF9	; 249
 a2c:	cc f3       	brlt	.-14     	; 0xa20 <__fixunssfsi+0x2e>
 a2e:	86 95       	lsr	r24
 a30:	77 95       	ror	r23
 a32:	67 95       	ror	r22
 a34:	b3 95       	inc	r27
 a36:	d9 f7       	brne	.-10     	; 0xa2e <__fixunssfsi+0x3c>
 a38:	3e f4       	brtc	.+14     	; 0xa48 <__fixunssfsi+0x56>
 a3a:	90 95       	com	r25
 a3c:	80 95       	com	r24
 a3e:	70 95       	com	r23
 a40:	61 95       	neg	r22
 a42:	7f 4f       	sbci	r23, 0xFF	; 255
 a44:	8f 4f       	sbci	r24, 0xFF	; 255
 a46:	9f 4f       	sbci	r25, 0xFF	; 255
 a48:	08 95       	ret

00000a4a <__floatunsisf>:
 a4a:	e8 94       	clt
 a4c:	09 c0       	rjmp	.+18     	; 0xa60 <__floatsisf+0x12>

00000a4e <__floatsisf>:
 a4e:	97 fb       	bst	r25, 7
 a50:	3e f4       	brtc	.+14     	; 0xa60 <__floatsisf+0x12>
 a52:	90 95       	com	r25
 a54:	80 95       	com	r24
 a56:	70 95       	com	r23
 a58:	61 95       	neg	r22
 a5a:	7f 4f       	sbci	r23, 0xFF	; 255
 a5c:	8f 4f       	sbci	r24, 0xFF	; 255
 a5e:	9f 4f       	sbci	r25, 0xFF	; 255
 a60:	99 23       	and	r25, r25
 a62:	a9 f0       	breq	.+42     	; 0xa8e <__floatsisf+0x40>
 a64:	f9 2f       	mov	r31, r25
 a66:	96 e9       	ldi	r25, 0x96	; 150
 a68:	bb 27       	eor	r27, r27
 a6a:	93 95       	inc	r25
 a6c:	f6 95       	lsr	r31
 a6e:	87 95       	ror	r24
 a70:	77 95       	ror	r23
 a72:	67 95       	ror	r22
 a74:	b7 95       	ror	r27
 a76:	f1 11       	cpse	r31, r1
 a78:	f8 cf       	rjmp	.-16     	; 0xa6a <__floatsisf+0x1c>
 a7a:	fa f4       	brpl	.+62     	; 0xaba <__floatsisf+0x6c>
 a7c:	bb 0f       	add	r27, r27
 a7e:	11 f4       	brne	.+4      	; 0xa84 <__floatsisf+0x36>
 a80:	60 ff       	sbrs	r22, 0
 a82:	1b c0       	rjmp	.+54     	; 0xaba <__floatsisf+0x6c>
 a84:	6f 5f       	subi	r22, 0xFF	; 255
 a86:	7f 4f       	sbci	r23, 0xFF	; 255
 a88:	8f 4f       	sbci	r24, 0xFF	; 255
 a8a:	9f 4f       	sbci	r25, 0xFF	; 255
 a8c:	16 c0       	rjmp	.+44     	; 0xaba <__floatsisf+0x6c>
 a8e:	88 23       	and	r24, r24
 a90:	11 f0       	breq	.+4      	; 0xa96 <__floatsisf+0x48>
 a92:	96 e9       	ldi	r25, 0x96	; 150
 a94:	11 c0       	rjmp	.+34     	; 0xab8 <__floatsisf+0x6a>
 a96:	77 23       	and	r23, r23
 a98:	21 f0       	breq	.+8      	; 0xaa2 <__floatsisf+0x54>
 a9a:	9e e8       	ldi	r25, 0x8E	; 142
 a9c:	87 2f       	mov	r24, r23
 a9e:	76 2f       	mov	r23, r22
 aa0:	05 c0       	rjmp	.+10     	; 0xaac <__floatsisf+0x5e>
 aa2:	66 23       	and	r22, r22
 aa4:	71 f0       	breq	.+28     	; 0xac2 <__floatsisf+0x74>
 aa6:	96 e8       	ldi	r25, 0x86	; 134
 aa8:	86 2f       	mov	r24, r22
 aaa:	70 e0       	ldi	r23, 0x00	; 0
 aac:	60 e0       	ldi	r22, 0x00	; 0
 aae:	2a f0       	brmi	.+10     	; 0xaba <__floatsisf+0x6c>
 ab0:	9a 95       	dec	r25
 ab2:	66 0f       	add	r22, r22
 ab4:	77 1f       	adc	r23, r23
 ab6:	88 1f       	adc	r24, r24
 ab8:	da f7       	brpl	.-10     	; 0xab0 <__floatsisf+0x62>
 aba:	88 0f       	add	r24, r24
 abc:	96 95       	lsr	r25
 abe:	87 95       	ror	r24
 ac0:	97 f9       	bld	r25, 7
 ac2:	08 95       	ret

00000ac4 <__fp_inf>:
 ac4:	97 f9       	bld	r25, 7
 ac6:	9f 67       	ori	r25, 0x7F	; 127
 ac8:	80 e8       	ldi	r24, 0x80	; 128
 aca:	70 e0       	ldi	r23, 0x00	; 0
 acc:	60 e0       	ldi	r22, 0x00	; 0
 ace:	08 95       	ret

00000ad0 <__fp_nan>:
 ad0:	9f ef       	ldi	r25, 0xFF	; 255
 ad2:	80 ec       	ldi	r24, 0xC0	; 192
 ad4:	08 95       	ret

00000ad6 <__fp_pscA>:
 ad6:	00 24       	eor	r0, r0
 ad8:	0a 94       	dec	r0
 ada:	16 16       	cp	r1, r22
 adc:	17 06       	cpc	r1, r23
 ade:	18 06       	cpc	r1, r24
 ae0:	09 06       	cpc	r0, r25
 ae2:	08 95       	ret

00000ae4 <__fp_pscB>:
 ae4:	00 24       	eor	r0, r0
 ae6:	0a 94       	dec	r0
 ae8:	12 16       	cp	r1, r18
 aea:	13 06       	cpc	r1, r19
 aec:	14 06       	cpc	r1, r20
 aee:	05 06       	cpc	r0, r21
 af0:	08 95       	ret

00000af2 <__fp_round>:
 af2:	09 2e       	mov	r0, r25
 af4:	03 94       	inc	r0
 af6:	00 0c       	add	r0, r0
 af8:	11 f4       	brne	.+4      	; 0xafe <__fp_round+0xc>
 afa:	88 23       	and	r24, r24
 afc:	52 f0       	brmi	.+20     	; 0xb12 <__fp_round+0x20>
 afe:	bb 0f       	add	r27, r27
 b00:	40 f4       	brcc	.+16     	; 0xb12 <__fp_round+0x20>
 b02:	bf 2b       	or	r27, r31
 b04:	11 f4       	brne	.+4      	; 0xb0a <__fp_round+0x18>
 b06:	60 ff       	sbrs	r22, 0
 b08:	04 c0       	rjmp	.+8      	; 0xb12 <__fp_round+0x20>
 b0a:	6f 5f       	subi	r22, 0xFF	; 255
 b0c:	7f 4f       	sbci	r23, 0xFF	; 255
 b0e:	8f 4f       	sbci	r24, 0xFF	; 255
 b10:	9f 4f       	sbci	r25, 0xFF	; 255
 b12:	08 95       	ret

00000b14 <__fp_split3>:
 b14:	57 fd       	sbrc	r21, 7
 b16:	90 58       	subi	r25, 0x80	; 128
 b18:	44 0f       	add	r20, r20
 b1a:	55 1f       	adc	r21, r21
 b1c:	59 f0       	breq	.+22     	; 0xb34 <__fp_splitA+0x10>
 b1e:	5f 3f       	cpi	r21, 0xFF	; 255
 b20:	71 f0       	breq	.+28     	; 0xb3e <__fp_splitA+0x1a>
 b22:	47 95       	ror	r20

00000b24 <__fp_splitA>:
 b24:	88 0f       	add	r24, r24
 b26:	97 fb       	bst	r25, 7
 b28:	99 1f       	adc	r25, r25
 b2a:	61 f0       	breq	.+24     	; 0xb44 <__fp_splitA+0x20>
 b2c:	9f 3f       	cpi	r25, 0xFF	; 255
 b2e:	79 f0       	breq	.+30     	; 0xb4e <__fp_splitA+0x2a>
 b30:	87 95       	ror	r24
 b32:	08 95       	ret
 b34:	12 16       	cp	r1, r18
 b36:	13 06       	cpc	r1, r19
 b38:	14 06       	cpc	r1, r20
 b3a:	55 1f       	adc	r21, r21
 b3c:	f2 cf       	rjmp	.-28     	; 0xb22 <__fp_split3+0xe>
 b3e:	46 95       	lsr	r20
 b40:	f1 df       	rcall	.-30     	; 0xb24 <__fp_splitA>
 b42:	08 c0       	rjmp	.+16     	; 0xb54 <__fp_splitA+0x30>
 b44:	16 16       	cp	r1, r22
 b46:	17 06       	cpc	r1, r23
 b48:	18 06       	cpc	r1, r24
 b4a:	99 1f       	adc	r25, r25
 b4c:	f1 cf       	rjmp	.-30     	; 0xb30 <__fp_splitA+0xc>
 b4e:	86 95       	lsr	r24
 b50:	71 05       	cpc	r23, r1
 b52:	61 05       	cpc	r22, r1
 b54:	08 94       	sec
 b56:	08 95       	ret

00000b58 <__fp_zero>:
 b58:	e8 94       	clt

00000b5a <__fp_szero>:
 b5a:	bb 27       	eor	r27, r27
 b5c:	66 27       	eor	r22, r22
 b5e:	77 27       	eor	r23, r23
 b60:	cb 01       	movw	r24, r22
 b62:	97 f9       	bld	r25, 7
 b64:	08 95       	ret

00000b66 <__mulsf3>:
 b66:	0b d0       	rcall	.+22     	; 0xb7e <__mulsf3x>
 b68:	c4 cf       	rjmp	.-120    	; 0xaf2 <__fp_round>
 b6a:	b5 df       	rcall	.-150    	; 0xad6 <__fp_pscA>
 b6c:	28 f0       	brcs	.+10     	; 0xb78 <__mulsf3+0x12>
 b6e:	ba df       	rcall	.-140    	; 0xae4 <__fp_pscB>
 b70:	18 f0       	brcs	.+6      	; 0xb78 <__mulsf3+0x12>
 b72:	95 23       	and	r25, r21
 b74:	09 f0       	breq	.+2      	; 0xb78 <__mulsf3+0x12>
 b76:	a6 cf       	rjmp	.-180    	; 0xac4 <__fp_inf>
 b78:	ab cf       	rjmp	.-170    	; 0xad0 <__fp_nan>
 b7a:	11 24       	eor	r1, r1
 b7c:	ee cf       	rjmp	.-36     	; 0xb5a <__fp_szero>

00000b7e <__mulsf3x>:
 b7e:	ca df       	rcall	.-108    	; 0xb14 <__fp_split3>
 b80:	a0 f3       	brcs	.-24     	; 0xb6a <__mulsf3+0x4>

00000b82 <__mulsf3_pse>:
 b82:	95 9f       	mul	r25, r21
 b84:	d1 f3       	breq	.-12     	; 0xb7a <__mulsf3+0x14>
 b86:	95 0f       	add	r25, r21
 b88:	50 e0       	ldi	r21, 0x00	; 0
 b8a:	55 1f       	adc	r21, r21
 b8c:	62 9f       	mul	r22, r18
 b8e:	f0 01       	movw	r30, r0
 b90:	72 9f       	mul	r23, r18
 b92:	bb 27       	eor	r27, r27
 b94:	f0 0d       	add	r31, r0
 b96:	b1 1d       	adc	r27, r1
 b98:	63 9f       	mul	r22, r19
 b9a:	aa 27       	eor	r26, r26
 b9c:	f0 0d       	add	r31, r0
 b9e:	b1 1d       	adc	r27, r1
 ba0:	aa 1f       	adc	r26, r26
 ba2:	64 9f       	mul	r22, r20
 ba4:	66 27       	eor	r22, r22
 ba6:	b0 0d       	add	r27, r0
 ba8:	a1 1d       	adc	r26, r1
 baa:	66 1f       	adc	r22, r22
 bac:	82 9f       	mul	r24, r18
 bae:	22 27       	eor	r18, r18
 bb0:	b0 0d       	add	r27, r0
 bb2:	a1 1d       	adc	r26, r1
 bb4:	62 1f       	adc	r22, r18
 bb6:	73 9f       	mul	r23, r19
 bb8:	b0 0d       	add	r27, r0
 bba:	a1 1d       	adc	r26, r1
 bbc:	62 1f       	adc	r22, r18
 bbe:	83 9f       	mul	r24, r19
 bc0:	a0 0d       	add	r26, r0
 bc2:	61 1d       	adc	r22, r1
 bc4:	22 1f       	adc	r18, r18
 bc6:	74 9f       	mul	r23, r20
 bc8:	33 27       	eor	r19, r19
 bca:	a0 0d       	add	r26, r0
 bcc:	61 1d       	adc	r22, r1
 bce:	23 1f       	adc	r18, r19
 bd0:	84 9f       	mul	r24, r20
 bd2:	60 0d       	add	r22, r0
 bd4:	21 1d       	adc	r18, r1
 bd6:	82 2f       	mov	r24, r18
 bd8:	76 2f       	mov	r23, r22
 bda:	6a 2f       	mov	r22, r26
 bdc:	11 24       	eor	r1, r1
 bde:	9f 57       	subi	r25, 0x7F	; 127
 be0:	50 40       	sbci	r21, 0x00	; 0
 be2:	8a f0       	brmi	.+34     	; 0xc06 <__mulsf3_pse+0x84>
 be4:	e1 f0       	breq	.+56     	; 0xc1e <__mulsf3_pse+0x9c>
 be6:	88 23       	and	r24, r24
 be8:	4a f0       	brmi	.+18     	; 0xbfc <__mulsf3_pse+0x7a>
 bea:	ee 0f       	add	r30, r30
 bec:	ff 1f       	adc	r31, r31
 bee:	bb 1f       	adc	r27, r27
 bf0:	66 1f       	adc	r22, r22
 bf2:	77 1f       	adc	r23, r23
 bf4:	88 1f       	adc	r24, r24
 bf6:	91 50       	subi	r25, 0x01	; 1
 bf8:	50 40       	sbci	r21, 0x00	; 0
 bfa:	a9 f7       	brne	.-22     	; 0xbe6 <__mulsf3_pse+0x64>
 bfc:	9e 3f       	cpi	r25, 0xFE	; 254
 bfe:	51 05       	cpc	r21, r1
 c00:	70 f0       	brcs	.+28     	; 0xc1e <__mulsf3_pse+0x9c>
 c02:	60 cf       	rjmp	.-320    	; 0xac4 <__fp_inf>
 c04:	aa cf       	rjmp	.-172    	; 0xb5a <__fp_szero>
 c06:	5f 3f       	cpi	r21, 0xFF	; 255
 c08:	ec f3       	brlt	.-6      	; 0xc04 <__mulsf3_pse+0x82>
 c0a:	98 3e       	cpi	r25, 0xE8	; 232
 c0c:	dc f3       	brlt	.-10     	; 0xc04 <__mulsf3_pse+0x82>
 c0e:	86 95       	lsr	r24
 c10:	77 95       	ror	r23
 c12:	67 95       	ror	r22
 c14:	b7 95       	ror	r27
 c16:	f7 95       	ror	r31
 c18:	e7 95       	ror	r30
 c1a:	9f 5f       	subi	r25, 0xFF	; 255
 c1c:	c1 f7       	brne	.-16     	; 0xc0e <__mulsf3_pse+0x8c>
 c1e:	fe 2b       	or	r31, r30
 c20:	88 0f       	add	r24, r24
 c22:	91 1d       	adc	r25, r1
 c24:	96 95       	lsr	r25
 c26:	87 95       	ror	r24
 c28:	97 f9       	bld	r25, 7
 c2a:	08 95       	ret

00000c2c <__mulsi3>:
 c2c:	db 01       	movw	r26, r22
 c2e:	8f 93       	push	r24
 c30:	9f 93       	push	r25
 c32:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <__muluhisi3>
 c36:	bf 91       	pop	r27
 c38:	af 91       	pop	r26
 c3a:	a2 9f       	mul	r26, r18
 c3c:	80 0d       	add	r24, r0
 c3e:	91 1d       	adc	r25, r1
 c40:	a3 9f       	mul	r26, r19
 c42:	90 0d       	add	r25, r0
 c44:	b2 9f       	mul	r27, r18
 c46:	90 0d       	add	r25, r0
 c48:	11 24       	eor	r1, r1
 c4a:	08 95       	ret

00000c4c <__udivmodhi4>:
 c4c:	aa 1b       	sub	r26, r26
 c4e:	bb 1b       	sub	r27, r27
 c50:	51 e1       	ldi	r21, 0x11	; 17
 c52:	07 c0       	rjmp	.+14     	; 0xc62 <__udivmodhi4_ep>

00000c54 <__udivmodhi4_loop>:
 c54:	aa 1f       	adc	r26, r26
 c56:	bb 1f       	adc	r27, r27
 c58:	a6 17       	cp	r26, r22
 c5a:	b7 07       	cpc	r27, r23
 c5c:	10 f0       	brcs	.+4      	; 0xc62 <__udivmodhi4_ep>
 c5e:	a6 1b       	sub	r26, r22
 c60:	b7 0b       	sbc	r27, r23

00000c62 <__udivmodhi4_ep>:
 c62:	88 1f       	adc	r24, r24
 c64:	99 1f       	adc	r25, r25
 c66:	5a 95       	dec	r21
 c68:	a9 f7       	brne	.-22     	; 0xc54 <__udivmodhi4_loop>
 c6a:	80 95       	com	r24
 c6c:	90 95       	com	r25
 c6e:	bc 01       	movw	r22, r24
 c70:	cd 01       	movw	r24, r26
 c72:	08 95       	ret

00000c74 <__udivmodsi4>:
 c74:	a1 e2       	ldi	r26, 0x21	; 33
 c76:	1a 2e       	mov	r1, r26
 c78:	aa 1b       	sub	r26, r26
 c7a:	bb 1b       	sub	r27, r27
 c7c:	fd 01       	movw	r30, r26
 c7e:	0d c0       	rjmp	.+26     	; 0xc9a <__udivmodsi4_ep>

00000c80 <__udivmodsi4_loop>:
 c80:	aa 1f       	adc	r26, r26
 c82:	bb 1f       	adc	r27, r27
 c84:	ee 1f       	adc	r30, r30
 c86:	ff 1f       	adc	r31, r31
 c88:	a2 17       	cp	r26, r18
 c8a:	b3 07       	cpc	r27, r19
 c8c:	e4 07       	cpc	r30, r20
 c8e:	f5 07       	cpc	r31, r21
 c90:	20 f0       	brcs	.+8      	; 0xc9a <__udivmodsi4_ep>
 c92:	a2 1b       	sub	r26, r18
 c94:	b3 0b       	sbc	r27, r19
 c96:	e4 0b       	sbc	r30, r20
 c98:	f5 0b       	sbc	r31, r21

00000c9a <__udivmodsi4_ep>:
 c9a:	66 1f       	adc	r22, r22
 c9c:	77 1f       	adc	r23, r23
 c9e:	88 1f       	adc	r24, r24
 ca0:	99 1f       	adc	r25, r25
 ca2:	1a 94       	dec	r1
 ca4:	69 f7       	brne	.-38     	; 0xc80 <__udivmodsi4_loop>
 ca6:	60 95       	com	r22
 ca8:	70 95       	com	r23
 caa:	80 95       	com	r24
 cac:	90 95       	com	r25
 cae:	9b 01       	movw	r18, r22
 cb0:	ac 01       	movw	r20, r24
 cb2:	bd 01       	movw	r22, r26
 cb4:	cf 01       	movw	r24, r30
 cb6:	08 95       	ret

00000cb8 <__divmodsi4>:
 cb8:	05 2e       	mov	r0, r21
 cba:	97 fb       	bst	r25, 7
 cbc:	1e f4       	brtc	.+6      	; 0xcc4 <__divmodsi4+0xc>
 cbe:	00 94       	com	r0
 cc0:	0e 94 73 06 	call	0xce6	; 0xce6 <__negsi2>
 cc4:	57 fd       	sbrc	r21, 7
 cc6:	07 d0       	rcall	.+14     	; 0xcd6 <__divmodsi4_neg2>
 cc8:	0e 94 3a 06 	call	0xc74	; 0xc74 <__udivmodsi4>
 ccc:	07 fc       	sbrc	r0, 7
 cce:	03 d0       	rcall	.+6      	; 0xcd6 <__divmodsi4_neg2>
 cd0:	4e f4       	brtc	.+18     	; 0xce4 <__divmodsi4_exit>
 cd2:	0c 94 73 06 	jmp	0xce6	; 0xce6 <__negsi2>

00000cd6 <__divmodsi4_neg2>:
 cd6:	50 95       	com	r21
 cd8:	40 95       	com	r20
 cda:	30 95       	com	r19
 cdc:	21 95       	neg	r18
 cde:	3f 4f       	sbci	r19, 0xFF	; 255
 ce0:	4f 4f       	sbci	r20, 0xFF	; 255
 ce2:	5f 4f       	sbci	r21, 0xFF	; 255

00000ce4 <__divmodsi4_exit>:
 ce4:	08 95       	ret

00000ce6 <__negsi2>:
 ce6:	90 95       	com	r25
 ce8:	80 95       	com	r24
 cea:	70 95       	com	r23
 cec:	61 95       	neg	r22
 cee:	7f 4f       	sbci	r23, 0xFF	; 255
 cf0:	8f 4f       	sbci	r24, 0xFF	; 255
 cf2:	9f 4f       	sbci	r25, 0xFF	; 255
 cf4:	08 95       	ret

00000cf6 <__muluhisi3>:
 cf6:	0e 94 bd 06 	call	0xd7a	; 0xd7a <__umulhisi3>
 cfa:	a5 9f       	mul	r26, r21
 cfc:	90 0d       	add	r25, r0
 cfe:	b4 9f       	mul	r27, r20
 d00:	90 0d       	add	r25, r0
 d02:	a4 9f       	mul	r26, r20
 d04:	80 0d       	add	r24, r0
 d06:	91 1d       	adc	r25, r1
 d08:	11 24       	eor	r1, r1
 d0a:	08 95       	ret

00000d0c <__prologue_saves__>:
 d0c:	2f 92       	push	r2
 d0e:	3f 92       	push	r3
 d10:	4f 92       	push	r4
 d12:	5f 92       	push	r5
 d14:	6f 92       	push	r6
 d16:	7f 92       	push	r7
 d18:	8f 92       	push	r8
 d1a:	9f 92       	push	r9
 d1c:	af 92       	push	r10
 d1e:	bf 92       	push	r11
 d20:	cf 92       	push	r12
 d22:	df 92       	push	r13
 d24:	ef 92       	push	r14
 d26:	ff 92       	push	r15
 d28:	0f 93       	push	r16
 d2a:	1f 93       	push	r17
 d2c:	cf 93       	push	r28
 d2e:	df 93       	push	r29
 d30:	cd b7       	in	r28, 0x3d	; 61
 d32:	de b7       	in	r29, 0x3e	; 62
 d34:	ca 1b       	sub	r28, r26
 d36:	db 0b       	sbc	r29, r27
 d38:	0f b6       	in	r0, 0x3f	; 63
 d3a:	f8 94       	cli
 d3c:	de bf       	out	0x3e, r29	; 62
 d3e:	0f be       	out	0x3f, r0	; 63
 d40:	cd bf       	out	0x3d, r28	; 61
 d42:	09 94       	ijmp

00000d44 <__epilogue_restores__>:
 d44:	2a 88       	ldd	r2, Y+18	; 0x12
 d46:	39 88       	ldd	r3, Y+17	; 0x11
 d48:	48 88       	ldd	r4, Y+16	; 0x10
 d4a:	5f 84       	ldd	r5, Y+15	; 0x0f
 d4c:	6e 84       	ldd	r6, Y+14	; 0x0e
 d4e:	7d 84       	ldd	r7, Y+13	; 0x0d
 d50:	8c 84       	ldd	r8, Y+12	; 0x0c
 d52:	9b 84       	ldd	r9, Y+11	; 0x0b
 d54:	aa 84       	ldd	r10, Y+10	; 0x0a
 d56:	b9 84       	ldd	r11, Y+9	; 0x09
 d58:	c8 84       	ldd	r12, Y+8	; 0x08
 d5a:	df 80       	ldd	r13, Y+7	; 0x07
 d5c:	ee 80       	ldd	r14, Y+6	; 0x06
 d5e:	fd 80       	ldd	r15, Y+5	; 0x05
 d60:	0c 81       	ldd	r16, Y+4	; 0x04
 d62:	1b 81       	ldd	r17, Y+3	; 0x03
 d64:	aa 81       	ldd	r26, Y+2	; 0x02
 d66:	b9 81       	ldd	r27, Y+1	; 0x01
 d68:	ce 0f       	add	r28, r30
 d6a:	d1 1d       	adc	r29, r1
 d6c:	0f b6       	in	r0, 0x3f	; 63
 d6e:	f8 94       	cli
 d70:	de bf       	out	0x3e, r29	; 62
 d72:	0f be       	out	0x3f, r0	; 63
 d74:	cd bf       	out	0x3d, r28	; 61
 d76:	ed 01       	movw	r28, r26
 d78:	08 95       	ret

00000d7a <__umulhisi3>:
 d7a:	a2 9f       	mul	r26, r18
 d7c:	b0 01       	movw	r22, r0
 d7e:	b3 9f       	mul	r27, r19
 d80:	c0 01       	movw	r24, r0
 d82:	a3 9f       	mul	r26, r19
 d84:	70 0d       	add	r23, r0
 d86:	81 1d       	adc	r24, r1
 d88:	11 24       	eor	r1, r1
 d8a:	91 1d       	adc	r25, r1
 d8c:	b2 9f       	mul	r27, r18
 d8e:	70 0d       	add	r23, r0
 d90:	81 1d       	adc	r24, r1
 d92:	11 24       	eor	r1, r1
 d94:	91 1d       	adc	r25, r1
 d96:	08 95       	ret

00000d98 <malloc>:
 d98:	cf 93       	push	r28
 d9a:	df 93       	push	r29
 d9c:	82 30       	cpi	r24, 0x02	; 2
 d9e:	91 05       	cpc	r25, r1
 da0:	10 f4       	brcc	.+4      	; 0xda6 <malloc+0xe>
 da2:	82 e0       	ldi	r24, 0x02	; 2
 da4:	90 e0       	ldi	r25, 0x00	; 0
 da6:	e0 91 54 01 	lds	r30, 0x0154
 daa:	f0 91 55 01 	lds	r31, 0x0155
 dae:	20 e0       	ldi	r18, 0x00	; 0
 db0:	30 e0       	ldi	r19, 0x00	; 0
 db2:	a0 e0       	ldi	r26, 0x00	; 0
 db4:	b0 e0       	ldi	r27, 0x00	; 0
 db6:	30 97       	sbiw	r30, 0x00	; 0
 db8:	39 f1       	breq	.+78     	; 0xe08 <malloc+0x70>
 dba:	40 81       	ld	r20, Z
 dbc:	51 81       	ldd	r21, Z+1	; 0x01
 dbe:	48 17       	cp	r20, r24
 dc0:	59 07       	cpc	r21, r25
 dc2:	b8 f0       	brcs	.+46     	; 0xdf2 <malloc+0x5a>
 dc4:	48 17       	cp	r20, r24
 dc6:	59 07       	cpc	r21, r25
 dc8:	71 f4       	brne	.+28     	; 0xde6 <malloc+0x4e>
 dca:	82 81       	ldd	r24, Z+2	; 0x02
 dcc:	93 81       	ldd	r25, Z+3	; 0x03
 dce:	10 97       	sbiw	r26, 0x00	; 0
 dd0:	29 f0       	breq	.+10     	; 0xddc <malloc+0x44>
 dd2:	13 96       	adiw	r26, 0x03	; 3
 dd4:	9c 93       	st	X, r25
 dd6:	8e 93       	st	-X, r24
 dd8:	12 97       	sbiw	r26, 0x02	; 2
 dda:	2c c0       	rjmp	.+88     	; 0xe34 <malloc+0x9c>
 ddc:	90 93 55 01 	sts	0x0155, r25
 de0:	80 93 54 01 	sts	0x0154, r24
 de4:	27 c0       	rjmp	.+78     	; 0xe34 <malloc+0x9c>
 de6:	21 15       	cp	r18, r1
 de8:	31 05       	cpc	r19, r1
 dea:	31 f0       	breq	.+12     	; 0xdf8 <malloc+0x60>
 dec:	42 17       	cp	r20, r18
 dee:	53 07       	cpc	r21, r19
 df0:	18 f0       	brcs	.+6      	; 0xdf8 <malloc+0x60>
 df2:	a9 01       	movw	r20, r18
 df4:	db 01       	movw	r26, r22
 df6:	01 c0       	rjmp	.+2      	; 0xdfa <malloc+0x62>
 df8:	ef 01       	movw	r28, r30
 dfa:	9a 01       	movw	r18, r20
 dfc:	bd 01       	movw	r22, r26
 dfe:	df 01       	movw	r26, r30
 e00:	02 80       	ldd	r0, Z+2	; 0x02
 e02:	f3 81       	ldd	r31, Z+3	; 0x03
 e04:	e0 2d       	mov	r30, r0
 e06:	d7 cf       	rjmp	.-82     	; 0xdb6 <malloc+0x1e>
 e08:	21 15       	cp	r18, r1
 e0a:	31 05       	cpc	r19, r1
 e0c:	f9 f0       	breq	.+62     	; 0xe4c <malloc+0xb4>
 e0e:	28 1b       	sub	r18, r24
 e10:	39 0b       	sbc	r19, r25
 e12:	24 30       	cpi	r18, 0x04	; 4
 e14:	31 05       	cpc	r19, r1
 e16:	80 f4       	brcc	.+32     	; 0xe38 <malloc+0xa0>
 e18:	8a 81       	ldd	r24, Y+2	; 0x02
 e1a:	9b 81       	ldd	r25, Y+3	; 0x03
 e1c:	61 15       	cp	r22, r1
 e1e:	71 05       	cpc	r23, r1
 e20:	21 f0       	breq	.+8      	; 0xe2a <malloc+0x92>
 e22:	fb 01       	movw	r30, r22
 e24:	93 83       	std	Z+3, r25	; 0x03
 e26:	82 83       	std	Z+2, r24	; 0x02
 e28:	04 c0       	rjmp	.+8      	; 0xe32 <malloc+0x9a>
 e2a:	90 93 55 01 	sts	0x0155, r25
 e2e:	80 93 54 01 	sts	0x0154, r24
 e32:	fe 01       	movw	r30, r28
 e34:	32 96       	adiw	r30, 0x02	; 2
 e36:	44 c0       	rjmp	.+136    	; 0xec0 <malloc+0x128>
 e38:	fe 01       	movw	r30, r28
 e3a:	e2 0f       	add	r30, r18
 e3c:	f3 1f       	adc	r31, r19
 e3e:	81 93       	st	Z+, r24
 e40:	91 93       	st	Z+, r25
 e42:	22 50       	subi	r18, 0x02	; 2
 e44:	31 09       	sbc	r19, r1
 e46:	39 83       	std	Y+1, r19	; 0x01
 e48:	28 83       	st	Y, r18
 e4a:	3a c0       	rjmp	.+116    	; 0xec0 <malloc+0x128>
 e4c:	20 91 52 01 	lds	r18, 0x0152
 e50:	30 91 53 01 	lds	r19, 0x0153
 e54:	23 2b       	or	r18, r19
 e56:	41 f4       	brne	.+16     	; 0xe68 <malloc+0xd0>
 e58:	20 91 02 01 	lds	r18, 0x0102
 e5c:	30 91 03 01 	lds	r19, 0x0103
 e60:	30 93 53 01 	sts	0x0153, r19
 e64:	20 93 52 01 	sts	0x0152, r18
 e68:	20 91 00 01 	lds	r18, 0x0100
 e6c:	30 91 01 01 	lds	r19, 0x0101
 e70:	21 15       	cp	r18, r1
 e72:	31 05       	cpc	r19, r1
 e74:	41 f4       	brne	.+16     	; 0xe86 <malloc+0xee>
 e76:	2d b7       	in	r18, 0x3d	; 61
 e78:	3e b7       	in	r19, 0x3e	; 62
 e7a:	40 91 04 01 	lds	r20, 0x0104
 e7e:	50 91 05 01 	lds	r21, 0x0105
 e82:	24 1b       	sub	r18, r20
 e84:	35 0b       	sbc	r19, r21
 e86:	e0 91 52 01 	lds	r30, 0x0152
 e8a:	f0 91 53 01 	lds	r31, 0x0153
 e8e:	e2 17       	cp	r30, r18
 e90:	f3 07       	cpc	r31, r19
 e92:	a0 f4       	brcc	.+40     	; 0xebc <malloc+0x124>
 e94:	2e 1b       	sub	r18, r30
 e96:	3f 0b       	sbc	r19, r31
 e98:	28 17       	cp	r18, r24
 e9a:	39 07       	cpc	r19, r25
 e9c:	78 f0       	brcs	.+30     	; 0xebc <malloc+0x124>
 e9e:	ac 01       	movw	r20, r24
 ea0:	4e 5f       	subi	r20, 0xFE	; 254
 ea2:	5f 4f       	sbci	r21, 0xFF	; 255
 ea4:	24 17       	cp	r18, r20
 ea6:	35 07       	cpc	r19, r21
 ea8:	48 f0       	brcs	.+18     	; 0xebc <malloc+0x124>
 eaa:	4e 0f       	add	r20, r30
 eac:	5f 1f       	adc	r21, r31
 eae:	50 93 53 01 	sts	0x0153, r21
 eb2:	40 93 52 01 	sts	0x0152, r20
 eb6:	81 93       	st	Z+, r24
 eb8:	91 93       	st	Z+, r25
 eba:	02 c0       	rjmp	.+4      	; 0xec0 <malloc+0x128>
 ebc:	e0 e0       	ldi	r30, 0x00	; 0
 ebe:	f0 e0       	ldi	r31, 0x00	; 0
 ec0:	cf 01       	movw	r24, r30
 ec2:	df 91       	pop	r29
 ec4:	cf 91       	pop	r28
 ec6:	08 95       	ret

00000ec8 <free>:
 ec8:	cf 93       	push	r28
 eca:	df 93       	push	r29
 ecc:	00 97       	sbiw	r24, 0x00	; 0
 ece:	09 f4       	brne	.+2      	; 0xed2 <free+0xa>
 ed0:	87 c0       	rjmp	.+270    	; 0xfe0 <free+0x118>
 ed2:	fc 01       	movw	r30, r24
 ed4:	32 97       	sbiw	r30, 0x02	; 2
 ed6:	13 82       	std	Z+3, r1	; 0x03
 ed8:	12 82       	std	Z+2, r1	; 0x02
 eda:	c0 91 54 01 	lds	r28, 0x0154
 ede:	d0 91 55 01 	lds	r29, 0x0155
 ee2:	20 97       	sbiw	r28, 0x00	; 0
 ee4:	81 f4       	brne	.+32     	; 0xf06 <free+0x3e>
 ee6:	20 81       	ld	r18, Z
 ee8:	31 81       	ldd	r19, Z+1	; 0x01
 eea:	28 0f       	add	r18, r24
 eec:	39 1f       	adc	r19, r25
 eee:	80 91 52 01 	lds	r24, 0x0152
 ef2:	90 91 53 01 	lds	r25, 0x0153
 ef6:	82 17       	cp	r24, r18
 ef8:	93 07       	cpc	r25, r19
 efa:	79 f5       	brne	.+94     	; 0xf5a <free+0x92>
 efc:	f0 93 53 01 	sts	0x0153, r31
 f00:	e0 93 52 01 	sts	0x0152, r30
 f04:	6d c0       	rjmp	.+218    	; 0xfe0 <free+0x118>
 f06:	de 01       	movw	r26, r28
 f08:	20 e0       	ldi	r18, 0x00	; 0
 f0a:	30 e0       	ldi	r19, 0x00	; 0
 f0c:	ae 17       	cp	r26, r30
 f0e:	bf 07       	cpc	r27, r31
 f10:	50 f4       	brcc	.+20     	; 0xf26 <free+0x5e>
 f12:	12 96       	adiw	r26, 0x02	; 2
 f14:	4d 91       	ld	r20, X+
 f16:	5c 91       	ld	r21, X
 f18:	13 97       	sbiw	r26, 0x03	; 3
 f1a:	9d 01       	movw	r18, r26
 f1c:	41 15       	cp	r20, r1
 f1e:	51 05       	cpc	r21, r1
 f20:	09 f1       	breq	.+66     	; 0xf64 <free+0x9c>
 f22:	da 01       	movw	r26, r20
 f24:	f3 cf       	rjmp	.-26     	; 0xf0c <free+0x44>
 f26:	b3 83       	std	Z+3, r27	; 0x03
 f28:	a2 83       	std	Z+2, r26	; 0x02
 f2a:	40 81       	ld	r20, Z
 f2c:	51 81       	ldd	r21, Z+1	; 0x01
 f2e:	84 0f       	add	r24, r20
 f30:	95 1f       	adc	r25, r21
 f32:	8a 17       	cp	r24, r26
 f34:	9b 07       	cpc	r25, r27
 f36:	71 f4       	brne	.+28     	; 0xf54 <free+0x8c>
 f38:	8d 91       	ld	r24, X+
 f3a:	9c 91       	ld	r25, X
 f3c:	11 97       	sbiw	r26, 0x01	; 1
 f3e:	84 0f       	add	r24, r20
 f40:	95 1f       	adc	r25, r21
 f42:	02 96       	adiw	r24, 0x02	; 2
 f44:	91 83       	std	Z+1, r25	; 0x01
 f46:	80 83       	st	Z, r24
 f48:	12 96       	adiw	r26, 0x02	; 2
 f4a:	8d 91       	ld	r24, X+
 f4c:	9c 91       	ld	r25, X
 f4e:	13 97       	sbiw	r26, 0x03	; 3
 f50:	93 83       	std	Z+3, r25	; 0x03
 f52:	82 83       	std	Z+2, r24	; 0x02
 f54:	21 15       	cp	r18, r1
 f56:	31 05       	cpc	r19, r1
 f58:	29 f4       	brne	.+10     	; 0xf64 <free+0x9c>
 f5a:	f0 93 55 01 	sts	0x0155, r31
 f5e:	e0 93 54 01 	sts	0x0154, r30
 f62:	3e c0       	rjmp	.+124    	; 0xfe0 <free+0x118>
 f64:	d9 01       	movw	r26, r18
 f66:	13 96       	adiw	r26, 0x03	; 3
 f68:	fc 93       	st	X, r31
 f6a:	ee 93       	st	-X, r30
 f6c:	12 97       	sbiw	r26, 0x02	; 2
 f6e:	4d 91       	ld	r20, X+
 f70:	5d 91       	ld	r21, X+
 f72:	a4 0f       	add	r26, r20
 f74:	b5 1f       	adc	r27, r21
 f76:	ea 17       	cp	r30, r26
 f78:	fb 07       	cpc	r31, r27
 f7a:	79 f4       	brne	.+30     	; 0xf9a <free+0xd2>
 f7c:	80 81       	ld	r24, Z
 f7e:	91 81       	ldd	r25, Z+1	; 0x01
 f80:	84 0f       	add	r24, r20
 f82:	95 1f       	adc	r25, r21
 f84:	02 96       	adiw	r24, 0x02	; 2
 f86:	d9 01       	movw	r26, r18
 f88:	11 96       	adiw	r26, 0x01	; 1
 f8a:	9c 93       	st	X, r25
 f8c:	8e 93       	st	-X, r24
 f8e:	82 81       	ldd	r24, Z+2	; 0x02
 f90:	93 81       	ldd	r25, Z+3	; 0x03
 f92:	13 96       	adiw	r26, 0x03	; 3
 f94:	9c 93       	st	X, r25
 f96:	8e 93       	st	-X, r24
 f98:	12 97       	sbiw	r26, 0x02	; 2
 f9a:	e0 e0       	ldi	r30, 0x00	; 0
 f9c:	f0 e0       	ldi	r31, 0x00	; 0
 f9e:	8a 81       	ldd	r24, Y+2	; 0x02
 fa0:	9b 81       	ldd	r25, Y+3	; 0x03
 fa2:	00 97       	sbiw	r24, 0x00	; 0
 fa4:	19 f0       	breq	.+6      	; 0xfac <free+0xe4>
 fa6:	fe 01       	movw	r30, r28
 fa8:	ec 01       	movw	r28, r24
 faa:	f9 cf       	rjmp	.-14     	; 0xf9e <free+0xd6>
 fac:	ce 01       	movw	r24, r28
 fae:	02 96       	adiw	r24, 0x02	; 2
 fb0:	28 81       	ld	r18, Y
 fb2:	39 81       	ldd	r19, Y+1	; 0x01
 fb4:	82 0f       	add	r24, r18
 fb6:	93 1f       	adc	r25, r19
 fb8:	20 91 52 01 	lds	r18, 0x0152
 fbc:	30 91 53 01 	lds	r19, 0x0153
 fc0:	28 17       	cp	r18, r24
 fc2:	39 07       	cpc	r19, r25
 fc4:	69 f4       	brne	.+26     	; 0xfe0 <free+0x118>
 fc6:	30 97       	sbiw	r30, 0x00	; 0
 fc8:	29 f4       	brne	.+10     	; 0xfd4 <free+0x10c>
 fca:	10 92 55 01 	sts	0x0155, r1
 fce:	10 92 54 01 	sts	0x0154, r1
 fd2:	02 c0       	rjmp	.+4      	; 0xfd8 <free+0x110>
 fd4:	13 82       	std	Z+3, r1	; 0x03
 fd6:	12 82       	std	Z+2, r1	; 0x02
 fd8:	d0 93 53 01 	sts	0x0153, r29
 fdc:	c0 93 52 01 	sts	0x0152, r28
 fe0:	df 91       	pop	r29
 fe2:	cf 91       	pop	r28
 fe4:	08 95       	ret

00000fe6 <_exit>:
 fe6:	f8 94       	cli

00000fe8 <__stop_program>:
 fe8:	ff cf       	rjmp	.-2      	; 0xfe8 <__stop_program>
